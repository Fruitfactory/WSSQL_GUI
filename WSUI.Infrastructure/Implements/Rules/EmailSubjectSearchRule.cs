///////////////////////////////////////////////////////////
//  EmailSubjectSearchRule.cs
//  Implementation of the Class EmailSubjectSearchRule
//  Generated by Enterprise Architect
//  Created on:      29-Sep-2013 10:41:48 AM
//  Original author: Yariki
///////////////////////////////////////////////////////////


using System.Collections.Generic;
using WSUI.Core.Core.Rules;

namespace WSUI.Infrastructure.Implements.Rules 
{
	public class EmailSubjectSearchRule : BaseEmailSearchRule
	{

	    private string WhereTemplate =
            "WHERE CONTAINS(System.Kind,'email') AND System.Message.DateReceived < '{0}' AND CONTAINS(System.Subject,{1},1033) ORDER BY System.Message.DateReceived DESC";

		public EmailSubjectSearchRule()
		{
		    Priority = 2;
		}

        public EmailSubjectSearchRule(object lockObject)
            :base(lockObject)
        {
            Priority = 2;
        }

        protected override string OnGenerateWherePart(IList<IRule> listCriterisRules)
        {
            var dateString = FormatDate(ref LastDate);
            var and = GetProcessingSearchCriteria(listCriterisRules).Item1;
            return string.Format(WhereTemplate, dateString, and);
        }

	    public override void Init()
	    {
            RuleName = "EmailSubject";
            base.Init();
	    }
	}//end EmailSubjectSearchRule

}//end namespace Implements