<UserControl x:Class="WSUI.Control.WSMainControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:cal="http://www.codeplex.com/CompositeWPF"
             xmlns:converters="clr-namespace:WSUI.Infrastructure.Converters;assembly=WSUI.Infrastructure"
             Height="650" Width="950" MinHeight="450" MinWidth="725" 
             Background="White"
             >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />-->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                
            </ResourceDictionary.MergedDictionaries>
            
            <converters:ActivationStatusToGridVisibilityConverter x:Key="GridVisibility"></converters:ActivationStatusToGridVisibilityConverter>
            <converters:ActivationStatusToButtonVisibilityConverter x:Key="ButtonVisibility"></converters:ActivationStatusToButtonVisibilityConverter>
            
            <SolidColorBrush x:Key="RedColorBrush" Color="Red"></SolidColorBrush>
            <SolidColorBrush x:Key="DarkRedColorBrush" Color="DarkRed"></SolidColorBrush>
            <SolidColorBrush x:Key="WhiteColorBrush" Color="White"></SolidColorBrush>
            
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>    
    
        <Border Grid.Row="0" BorderThickness="0">
            <Grid Margin="7" x:Name="grid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.2*" />
                    <ColumnDefinition Width="0.5*" />
                    <ColumnDefinition Width="2"/>
                    <ColumnDefinition Width="0.5*"/>
                </Grid.ColumnDefinitions>
                <ContentControl Grid.Row="0" Grid.Column="1" Margin="4"
                                cal:RegionManager.RegionName="SearchRegion"/>
                <ContentControl Grid.Row="1" Grid.Column="0" Margin="4 4 0 4"
                                cal:RegionManager.RegionName="StrategyRegion" HorizontalAlignment="Stretch"/>
                <ContentControl Grid.Row="1" Grid.Column="1" Margin="0 4 0 4"
                                cal:RegionManager.RegionName="DataRegion"/>
                <ContentControl Grid.Row="1" Grid.Column="3" Margin="0 4 4 4"
                                cal:RegionManager.RegionName="PreviewRegion"/>
                <GridSplitter Grid.Row="1"
                              Grid.Column="2"
                              Width="2"
                              HorizontalAlignment="Stretch"
                              Background="GhostWhite"
                              ResizeBehavior="PreviousAndNext"
                              ResizeDirection="Columns" />
                


            
            
            </Grid>
        </Border>

        <Button x:Name="CloseButton" 
                Grid.Row="0"  HorizontalAlignment="Right" VerticalAlignment="Top"
                BorderThickness="1, 1, 1, 1" 
                Focusable="True" Height="30" HorizontalContentAlignment="Center" IsTabStop="False" 
                MaxHeight="34" Padding="1, 1, 1, 1" RenderSize="34, 30" ToolTip="Close" VerticalContentAlignment="Center" Width="34" 
                Click="CloseButton_OnClick" >
            <Grid Background="Transparent" RenderSize="34, 30">
                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" RenderSize="10, 8" SnapsToDevicePixels="True" x:Name="PathCross"
                      Stretch="Uniform" Width="16" Height="16" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                    <Path.Data>
                        F1M54.0573,47.8776L38.1771,31.9974 54.0547,16.1198C55.7604,14.4141 55.7604,11.6511 54.0573,9.94531 52.3516,8.23962 49.5859,8.23962 47.8802,9.94531L32.0026,25.8229 16.1224,9.94531C14.4167,8.23962 11.6511,8.23962 9.94794,9.94531 8.24219,11.6511 8.24219,14.4141 9.94794,16.1198L25.8255,32 9.94794,47.8776C8.24219,49.5834 8.24219,52.3477 9.94794,54.0534 11.6511,55.7572 14.4167,55.7585 16.1224,54.0534L32.0026,38.1745 47.8802,54.0534C49.5859,55.7585 52.3516,55.7572 54.0573,54.0534 55.7604,52.3477 55.763,49.5834 54.0573,47.8776z
                    </Path.Data>
                    <Path.RenderTransform>
                        <TransformGroup>
                            <TransformGroup.Children>
                                <RotateTransform Angle="271" />
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </TransformGroup.Children>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Grid>
            <Button.Style>
                <Style TargetType="Button" BasedOn="{StaticResource ChromelessButtonStyle}">
                    <Setter Property="Foreground" Value="#FFCCCCCC"></Setter>
                    <Style.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="True">
                            <Setter Property="Button.Background" Value="{StaticResource RedColorBrush}" />
                            <Setter Property="Button.Foreground" Value="{StaticResource WhiteColorBrush}" />
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter Property="Button.Background" Value="{StaticResource DarkRedColorBrush}" />
                            <Setter Property="Button.Foreground" Value="{StaticResource WhiteColorBrush}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <!--Visibility="{Binding ActivateStatus,Converter={StaticResource GridVisibility},UpdateSourceTrigger=PropertyChanged}"-->
        <!--<Grid Grid.Row="1" >
            <Grid.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            
            <TextBlock x:Name="ActivationStatus" Grid.Column="0" Text="{Binding TextStatus,UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="1" Foreground="Red"
                       FontSize="14" FontWeight="Bold"
                       
                       HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
            
            <Button x:Name="ButtonActivate" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Command="{Binding ActivateCommand}"
                    Visibility="{Binding ActivateStatus,Converter={StaticResource ButtonVisibility},ConverterParameter={x:Static enums:ActivationButtons.Activate},UpdateSourceTrigger=PropertyChanged}"
                    >Activate</Button>
            <Button x:Name="ButtonTryCheckAgain" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Command="{Binding TryAgainCommand}"
                    Visibility="{Binding ActivateStatus,Converter={StaticResource ButtonVisibility},ConverterParameter={x:Static enums:ActivationButtons.TryAgain},UpdateSourceTrigger=PropertyChanged}"
                    >Try Check Again</Button>
            <Button x:Name="ButtonDeactivate" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Command="{Binding DeactivateCommand}"
                    Visibility="Visible"
                    >Deactivate</Button>

        </Grid>-->
    </Grid>
</UserControl>
