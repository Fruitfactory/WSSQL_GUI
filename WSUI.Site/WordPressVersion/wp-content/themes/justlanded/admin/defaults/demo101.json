{
    "1": {
        "site_default_profile": "1",
        "landing_page_menu": "1",
        "custom_logo": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/logo2.png",
        "custom_favicon": "",
        "blog_title": "Blog",
        "header_info_label": "Call us for free!",
        "header_phone": "1-800-394-4333",
        "header_email": "",
        "custom_css": "",
        "custom_footer": "",
        "body_background": "#ffffff",
        "menu_background_active": "#dd4531",
        "link_color": "#d12727",
        "link_color_hover": "#c03220",
        "blog_button_background": "#d12727",
        "banner_gradient": {
            "start": "#cf5833",
            "end": "#ab2210"
        },
        "newsletter_background": "#dd4531",
        "pricing_highlight_background": "#dd4632",
        "pricing_highlight_hover_background": "#c03220",
        "font_body": {
            "size": "0.8",
            "unit": "em",
            "face": "Verdana*",
            "style": "regular",
            "color": "#333333"
        },
        "font_logo": {
            "size": "1.5",
            "unit": "em",
            "face": "Lato",
            "style": "900",
            "color": "#dd4531"
        },
        "font_logo_tagline": {
            "size": "1.25",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#999999"
        },
        "font_quotes": {
            "size": "1",
            "unit": "em",
            "face": "Verdana*",
            "color": "#333333",
            "style": "italic"
        },
        "font_heading_banner": {
            "size": "3",
            "unit": "em",
            "face": "Merriweather",
            "style": "700",
            "color": "#ffffff"
        },
        "font_section_title": {
            "size": "2.2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#dd4632"
        },
        "font_section_subtitle": {
            "size": "1.45",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#999999"
        },
        "font_newsletter_title": {
            "size": "1.8",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_big_testimonial": {
            "size": "1.4",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_pricing_title": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_pricing_sub_title": {
            "size": "1.05",
            "unit": "em",
            "face": "Verdana*",
            "style": "regular",
            "color": "#cccccc"
        },
        "font_pricing_sub_title_featured": "#f7c9c9",
        "font_pricing_price": {
            "size": "3.81",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_pricing_currency": {
            "size": "0.5",
            "unit": "em"
        },
        "font_heading_h1": {
            "size": "2.35",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h2": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h3": {
            "size": "1.6",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h4": {
            "size": "1.2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h5": {
            "size": "1.125",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h6": {
            "size": "1",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_page_title": {
            "size": "1.8",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_widget_title": {
            "size": "1.25",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_post_meta": {
            "size": "12",
            "unit": "px",
            "face": "Verdana*",
            "style": "regular",
            "color": "#999999"
        },
        "landingpage_blocks": {
            "disabled": {
                "placebo": "placebo",
                "block_page_content3": "Page Content 3",
                "block_page_content4": "Page Content 4",
                "block_widget1": "Widget 1",
                "block_widget2": "Widget 2"
            },
            "enabled": {
                "placebo": "placebo",
                "block_social_header": "Header Social Icons",
                "block_features": "List of Features",
                "block_page_content1": "Page Content 1",
                "block_gallery": "Gallery",
                "block_big_testimonial": "Feat. Testimonial",
                "block_page_content2": "Page Content 2",
                "block_small_testimonials": "Small Testimonials",
                "block_newsletter": "Newsletter Signup Form",
                "block_video": "Video Section",
                "block_pricing_table": "Pricing Table",
                "block_payment": "Payment Options",
                "block_social_side": "Sidebar Social Icons"
            }
        },
        "banner_position": "right",
        "banner_title": "A powerful WordPress landing page template",
        "banner_text": "This theme focuses on the key elements: the product itself, building trust, very easy to customize and the best thing, it is built with WordPress!",
        "banner_bullets": "Unlimited colors, supports Image, Video and Slider\r\nPowered by the fabulous HTML5/CSS3\r\nExtremely customizable, to the last Pixel",
        "banner_layout_select": "Single Image",
        "banner_image": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/11/banner_image1.png",
        "banner_slider": {
            "1": {
                "order": "1",
                "title": "",
                "url": "",
                "link": ""
            }
        },
        "banner_video": "",
        "action_buttons_layout": "Two Buttons/Split-Button",
        "action_button1_text": "Buy for 20$",
        "action_button1_link": "#",
        "action_button1_target": "Current Window",
        "action_button2_text": "Try our Demo",
        "action_button2_link": "#",
        "action_button2_target": "Current Window",
        "social_blocks_header": {
            "disabled": {
                "placebo": "placebo",
                "stumbleupon": "StumbleUpon",
                "youtube": "YouTube",
                "vimeo": "Vimeo",
                "linkedin": "LinkedIn",
                "pinterest": "Pinterest",
                "digg": "Digg",
                "myspace": "MySpace",
                "picasa": "Picasa",
                "flickr": "flickr",
                "dribbble": "Dribbble",
                "blogger": "Blogger"
            },
            "enabled": {
                "placebo": "placebo",
                "twitter": "Twitter",
                "facebook": "Facebook",
                "rss": "RSS Feed",
                "feedback": "Feedback Form"
            }
        },
        "social_blocks_sidebar": {
            "disabled": {
                "placebo": "placebo",
                "feedback": "Feedback Form",
                "facebook": "Facebook",
                "rss": "RSS Feed",
                "twitter": "Twitter",
                "stumbleupon": "StumbleUpon",
                "youtube": "YouTube",
                "vimeo": "Vimeo",
                "linkedin": "LinkedIn",
                "pinterest": "Pinterest",
                "digg": "Digg",
                "myspace": "MySpace",
                "picasa": "Picasa",
                "flickr": "flickr",
                "dribbble": "Dribbble",
                "blogger": "Blogger"
            },
            "enabled": {
                "placebo": "placebo"
            }
        },
        "social_twitter": "",
        "social_facebook": "",
        "social_stumbleupon": "",
        "social_youtube": "",
        "social_vimeo": "",
        "social_linkedin": "",
        "social_pinterest": "",
        "social_digg": "",
        "social_myspace": "",
        "social_picasa": "",
        "social_flickr": "",
        "social_dribbble": "",
        "social_blogger": "",
        "social_rss": "",
        "social_feedback": "",
        "features_headline": "Sell your product online! Without the clutter",
        "features_sub_headline": "Sell your product with this brand new landing page",
        "features": {
            "1": {
                "order": "1",
                "title": "Sell your product online",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_1.png",
                "description": "Use a professional landing page template that just converts."
            },
            "2": {
                "order": "2",
                "title": "Very easy to customize",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_2.png",
                "description": "Build in Options Panel lets you customize almost every pixel"
            },
            "3": {
                "order": "3",
                "title": "Unlimited color schemes",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_3.png",
                "description": "Use build in Presets or create your own color schemes"
            },
            "4": {
                "order": "4",
                "title": "Powered by HTML5/CSS3",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_4.png",
                "description": "The latest standards for maximum compatibility."
            },
            "5": {
                "order": "5",
                "title": "Designed to convert",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_6.png",
                "description": "Incorporates proven practices for landing pages"
            },
            "6": {
                "order": "6",
                "title": "Split testing",
                "url": "",
                "description": "Create multiple page profiles and use them for split testing"
            }
        },
        "gallery_headline": "Take a look at our Screenshots",
        "gallery_sub_headline": "",
        "gallery": {
            "1": {
                "order": "1",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/11.jpg",
                "description": "Image description"
            },
            "2": {
                "order": "2",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/21.jpg",
                "description": "Image Description"
            },
            "3": {
                "order": "3",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/31.jpg",
                "description": "Image Description"
            },
            "4": {
                "order": "4",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/4.jpg",
                "description": "Image Description"
            },
            "5": {
                "order": "5",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/52.jpg",
                "description": "Image Description"
            },
            "6": {
                "order": "6",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/61.jpg",
                "description": "Image Description"
            }
        },
        "testimonial_quote": "“Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.”",
        "testimonial_name": "John Doe",
        "testimonial_title": "The Doe Company",
        "testimonials_headline": "What other customers are saying",
        "testimonials_sub_headline": "Now if we did not convince you, maybe a few words from our customers will!",
        "testimonials": {
            "1": {
                "order": "1",
                "title": "John Doe",
                "subtitle": "Some Company Inc.",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/11/johndoe.jpg",
                "description": "Lorem ipsum dolor sit amet, consetetur sadipscing elitrrmod tempor invidunt ut m et justo duo dolores et ea rebum. "
            },
            "2": {
                "order": "2",
                "title": "John Doe",
                "subtitle": "Some Company Inc.",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/11/johndoe.jpg",
                "description": "Lorem ipsum dolor sit amet, consetetur sadipscing elitrrmod tempor invidunt ut m et justo duo dolores et ea rebum. "
            },
            "3": {
                "order": "3",
                "title": "John Doe",
                "subtitle": "Some Company Inc.",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/11/johndoe.jpg",
                "description": "Lorem ipsum dolor sit amet, consetetur sadipscing elitrrmod tempor invidunt ut m et justo duo dolores et ea rebum. "
            }
        },
        "newsletter_headline_1": "Join our newsletter for exclusive deals",
        "newsletter_button": "Subscribe",
        "newsletter_placeholder": "Enter your email address",
        "newsletter_select": "mailchimp",
        "newsletter_group_aweber": "0",
        "newsletter_aweber_url": "",
        "newsletter_aweber_meta_web_form_id": "",
        "newsletter_aweber_meta_split_id": "",
        "newsletter_aweber_listname": "",
        "newsletter_aweber_redirect": "",
        "newsletter_aweber_meta_adtracking": "",
        "newsletter_aweber_meta_message": "",
        "newsletter_group_mailchimp": "1",
        "newsletter_mailchimp_url": "#",
        "newsletter_mailchimp_u": "#",
        "newsletter_mailchimp_id": "#",
        "newsletter_group_custom": "0",
        "newsletter_custom": "",
        "pricing_headline": "A price that fits your needs",
        "pricing_sub_headline": "Student or Company - we have the right offer for you",
        "pricing_button_text": "Buy now",
        "pricing_currency": "$",
        "pricing_packages": {
            "1": {
                "order": "1",
                "title": "Basic",
                "subtitle": "All you need to start",
                "link": "",
                "description": "15 Projects\r\n5 GB Storage\r\nUnlimited Users\r\nNo Time tracking\r\nEnhanced Security",
                "price": "17",
                "badge": "badge_bestseller",
                "highlighted": "no"
            },
            "2": {
                "order": "2",
                "title": "Standard",
                "subtitle": "Small price - big deal",
                "link": "",
                "description": "15 Projects\r\n5 GB Storage\r\nUnlimited Users\r\nNo Time tracking\r\nEnhanced Security",
                "price": "27",
                "badge": "",
                "highlighted": "no"
            },
            "3": {
                "order": "3",
                "title": "Premium",
                "subtitle": "Our most favorite package",
                "link": "",
                "description": "15 Projects\r\n5 GB Storage\r\nUnlimited Users\r\nNo Time tracking\r\nEnhanced Security",
                "price": "37",
                "badge": "badge_bestvalue",
                "highlighted": "yes"
            },
            "4": {
                "order": "4",
                "title": "Business",
                "subtitle": "Perfect company solution",
                "link": "",
                "description": "15 Projects\r\n5 GB Storage\r\nUnlimited Users\r\nNo Time tracking\r\nEnhanced Security",
                "price": "47",
                "badge": "",
                "highlighted": "no"
            }
        },
        "payment_headline": "Interested? What are you waiting for!",
        "payment_sub_headline": "Buy this super product today and save up to 20% when you buy",
        "payment_methods": {
            "visa": "1",
            "americanexpress": "1",
            "mastercard": "1",
            "paypal": "1",
            "ideal": "1"
        },
        "page_content_1_layout": "fullwidth",
        "page_content_1_showtitle": "0",
        "page_content_1_source1": "178",
        "page_content_1_source2": "0",
        "page_content_2_layout": "fullwidth",
        "page_content_2_showtitle": "0",
        "page_content_2_source1": "262",
        "page_content_2_source2": "0",
        "page_content_3_showtitle": "0",
        "page_content_3_source1": "0",
        "page_content_3_source2": "0",
        "page_content_4_showtitle": "0",
        "page_content_4_source1": "0",
        "page_content_4_source2": "0"
    },
    "2": {
        "site_default_profile": "1",
        "landing_page_menu": "1",
        "custom_logo": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/logo2.png",
        "custom_favicon": "",
        "blog_title": "Blog",
        "header_info_label": "Call us for free!",
        "header_phone": "1-800-394-4333",
        "header_email": "",
        "custom_css": "",
        "custom_footer": "",
        "body_background": "#ffffff",
        "menu_background_active": "#dd4531",
        "link_color": "#d12727",
        "link_color_hover": "#c03220",
        "blog_button_background": "#d12727",
        "banner_gradient": {
            "start": "#cf5833",
            "end": "#ab2210"
        },
        "newsletter_background": "#dd4531",
        "pricing_highlight_background": "#dd4632",
        "pricing_highlight_hover_background": "#c03220",
        "font_body": {
            "size": "0.8",
            "unit": "em",
            "face": "Verdana*",
            "style": "regular",
            "color": "#333333"
        },
        "font_logo": {
            "size": "1.5",
            "unit": "em",
            "face": "Lato",
            "style": "900",
            "color": "#dd4531"
        },
        "font_logo_tagline": {
            "size": "1.25",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#999999"
        },
        "font_quotes": {
            "size": "1",
            "unit": "em",
            "face": "Verdana*",
            "color": "#333333",
            "style": "italic"
        },
        "font_heading_banner": {
            "size": "3",
            "unit": "em",
            "face": "Merriweather",
            "style": "700",
            "color": "#ffffff"
        },
        "font_section_title": {
            "size": "2.2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#dd4632"
        },
        "font_section_subtitle": {
            "size": "1.45",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#999999"
        },
        "font_newsletter_title": {
            "size": "1.8",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_big_testimonial": {
            "size": "1.4",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_pricing_title": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_pricing_sub_title": {
            "size": "1.05",
            "unit": "em",
            "face": "Verdana*",
            "style": "regular",
            "color": "#cccccc"
        },
        "font_pricing_sub_title_featured": "#f7c9c9",
        "font_pricing_price": {
            "size": "3.81",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_pricing_currency": {
            "size": "0.5",
            "unit": "em"
        },
        "font_heading_h1": {
            "size": "2.35",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h2": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h3": {
            "size": "1.6",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h4": {
            "size": "1.2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h5": {
            "size": "1.125",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h6": {
            "size": "1",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_page_title": {
            "size": "1.8",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_widget_title": {
            "size": "1.25",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_post_meta": {
            "size": "12",
            "unit": "px",
            "face": "Verdana*",
            "style": "regular",
            "color": "#999999"
        },
        "landingpage_blocks": {
            "disabled": {
                "placebo": "placebo",
                "block_page_content3": "Page Content 3",
                "block_page_content4": "Page Content 4",
                "block_widget1": "Widget 1",
                "block_widget2": "Widget 2"
            },
            "enabled": {
                "placebo": "placebo",
                "block_social_header": "Header Social Icons",
                "block_features": "List of Features",
                "block_page_content1": "Page Content 1",
                "block_gallery": "Gallery",
                "block_big_testimonial": "Feat. Testimonial",
                "block_page_content2": "Page Content 2",
                "block_small_testimonials": "Small Testimonials",
                "block_newsletter": "Newsletter Signup Form",
                "block_video": "Video Section",
                "block_pricing_table": "Pricing Table",
                "block_payment": "Payment Options",
                "block_social_side": "Sidebar Social Icons"
            }
        },
        "banner_position": "right",
        "banner_title": "A powerful WordPress landing page template",
        "banner_text": "This theme focuses on the key elements: the product itself, building trust, very easy to customize and the best thing, it is built with WordPress!",
        "banner_bullets": "Unlimited colors, supports Image, Video and Slider\r\nPowered by the fabulous HTML5/CSS3\r\nExtremely customizable, to the last Pixel",
        "banner_layout_select": "Slider",
        "banner_image": "",
        "banner_slider": {
            "1": {
                "order": "1",
                "title": "",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/banner_image2.png",
                "link": ""
            },
            "2": {
                "order": "2",
                "title": "",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/banner_image3.png",
                "link": ""
            },
            "3": {
                "order": "3",
                "title": "",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/banner_image.png",
                "link": ""
            }
        },
        "banner_video": "",
        "action_buttons_layout": "Two Buttons/Split-Button",
        "action_button1_text": "Buy for 20$",
        "action_button1_link": "#",
        "action_button1_target": "Current Window",
        "action_button2_text": "Try our Demo",
        "action_button2_link": "#",
        "action_button2_target": "Current Window",
        "social_blocks_header": {
            "disabled": {
                "placebo": "placebo",
                "stumbleupon": "StumbleUpon",
                "youtube": "YouTube",
                "vimeo": "Vimeo",
                "linkedin": "LinkedIn",
                "pinterest": "Pinterest",
                "digg": "Digg",
                "myspace": "MySpace",
                "picasa": "Picasa",
                "flickr": "flickr",
                "dribbble": "Dribbble",
                "blogger": "Blogger"
            },
            "enabled": {
                "placebo": "placebo",
                "twitter": "Twitter",
                "facebook": "Facebook",
                "rss": "RSS Feed",
                "feedback": "Feedback Form"
            }
        },
        "social_blocks_sidebar": {
            "disabled": {
                "placebo": "placebo",
                "rss": "RSS Feed",
                "feedback": "Feedback Form",
                "facebook": "Facebook",
                "twitter": "Twitter",
                "stumbleupon": "StumbleUpon",
                "youtube": "YouTube",
                "vimeo": "Vimeo",
                "linkedin": "LinkedIn",
                "pinterest": "Pinterest",
                "digg": "Digg",
                "myspace": "MySpace",
                "picasa": "Picasa",
                "flickr": "flickr",
                "dribbble": "Dribbble",
                "blogger": "Blogger"
            },
            "enabled": {
                "placebo": "placebo"
            }
        },
        "social_twitter": "",
        "social_facebook": "",
        "social_stumbleupon": "",
        "social_youtube": "",
        "social_vimeo": "",
        "social_linkedin": "",
        "social_pinterest": "",
        "social_digg": "",
        "social_myspace": "",
        "social_picasa": "",
        "social_flickr": "",
        "social_dribbble": "",
        "social_blogger": "",
        "social_rss": "",
        "social_feedback": "",
        "features_headline": "Sell your product online! Without the clutter",
        "features_sub_headline": "Sell your product with this brand new landing page",
        "features": {
            "1": {
                "order": "1",
                "title": "Sell your product online",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_1.png",
                "description": "Use a professional landing page template that just converts."
            },
            "2": {
                "order": "2",
                "title": "Very easy to customize",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_2.png",
                "description": "Build in Options Panel lets you customize almost every pixel"
            },
            "3": {
                "order": "3",
                "title": "Unlimited color schemes",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_3.png",
                "description": "Use build in Presets or create your own color schemes"
            },
            "4": {
                "order": "4",
                "title": "Powered by HTML5/CSS3",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_4.png",
                "description": "The latest standards for maximum compatibility."
            },
            "5": {
                "order": "5",
                "title": "Designed to convert",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_6.png",
                "description": "Incorporates proven practices for landing pages"
            },
            "6": {
                "order": "6",
                "title": "Split testing",
                "url": "",
                "description": "Create multiple page profiles and use them for split testing"
            }
        },
        "gallery_headline": "Take a look at our Screenshots",
        "gallery_sub_headline": "",
        "gallery": {
            "1": {
                "order": "1",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/11.jpg",
                "description": "Image description"
            },
            "2": {
                "order": "2",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/21.jpg",
                "description": "Image Description"
            },
            "3": {
                "order": "3",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/31.jpg",
                "description": "Image Description"
            },
            "4": {
                "order": "4",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/4.jpg",
                "description": "Image Description"
            },
            "5": {
                "order": "5",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/52.jpg",
                "description": "Image Description"
            },
            "6": {
                "order": "6",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/61.jpg",
                "description": "Image Description"
            }
        },
        "testimonial_quote": "“Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.”",
        "testimonial_name": "John Doe",
        "testimonial_title": "The Doe Company",
        "testimonials_headline": "What other customers are saying",
        "testimonials_sub_headline": "Now if we did not convince you, maybe a few words from our customers will!",
        "testimonials": {
            "1": {
                "order": "1",
                "title": "John Doe",
                "subtitle": "Some Company Inc.",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/11/johndoe.jpg",
                "description": "Lorem ipsum dolor sit amet, consetetur sadipscing elitrrmod tempor invidunt ut m et justo duo dolores et ea rebum. "
            },
            "2": {
                "order": "2",
                "title": "John Doe",
                "subtitle": "Some Company Inc.",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/11/johndoe.jpg",
                "description": "Lorem ipsum dolor sit amet, consetetur sadipscing elitrrmod tempor invidunt ut m et justo duo dolores et ea rebum. "
            },
            "3": {
                "order": "3",
                "title": "John Doe",
                "subtitle": "Some Company Inc.",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/11/johndoe.jpg",
                "description": "Lorem ipsum dolor sit amet, consetetur sadipscing elitrrmod tempor invidunt ut m et justo duo dolores et ea rebum. "
            }
        },
        "newsletter_headline_1": "Join our newsletter for exclusive deals",
        "newsletter_button": "Subscribe",
        "newsletter_placeholder": "Enter your email address",
        "newsletter_select": "mailchimp",
        "newsletter_group_aweber": "0",
        "newsletter_aweber_url": "",
        "newsletter_aweber_meta_web_form_id": "",
        "newsletter_aweber_meta_split_id": "",
        "newsletter_aweber_listname": "",
        "newsletter_aweber_redirect": "",
        "newsletter_aweber_meta_adtracking": "",
        "newsletter_aweber_meta_message": "",
        "newsletter_group_mailchimp": "1",
        "newsletter_mailchimp_url": "#",
        "newsletter_mailchimp_u": "#",
        "newsletter_mailchimp_id": "#",
        "newsletter_group_custom": "0",
        "newsletter_custom": "",
        "pricing_headline": "A price that fits your needs",
        "pricing_sub_headline": "Student or Company - we have the right offer for you",
        "pricing_button_text": "Buy now",
        "pricing_currency": "$",
        "pricing_packages": {
            "1": {
                "order": "1",
                "title": "Basic",
                "subtitle": "All you need to start",
                "link": "",
                "description": "15 Projects\r\n5 GB Storage\r\nUnlimited Users\r\nNo Time tracking\r\nEnhanced Security",
                "price": "17",
                "badge": "badge_bestseller",
                "highlighted": "no"
            },
            "2": {
                "order": "2",
                "title": "Standard",
                "subtitle": "Small price - big deal",
                "link": "",
                "description": "15 Projects\r\n5 GB Storage\r\nUnlimited Users\r\nNo Time tracking\r\nEnhanced Security",
                "price": "27",
                "badge": "",
                "highlighted": "no"
            },
            "3": {
                "order": "3",
                "title": "Premium",
                "subtitle": "Our most favorite package",
                "link": "",
                "description": "15 Projects\r\n5 GB Storage\r\nUnlimited Users\r\nNo Time tracking\r\nEnhanced Security",
                "price": "37",
                "badge": "badge_bestvalue",
                "highlighted": "yes"
            },
            "4": {
                "order": "4",
                "title": "Business",
                "subtitle": "Perfect company solution",
                "link": "",
                "description": "15 Projects\r\n5 GB Storage\r\nUnlimited Users\r\nNo Time tracking\r\nEnhanced Security",
                "price": "47",
                "badge": "",
                "highlighted": "no"
            }
        },
        "payment_headline": "Interested? What are you waiting for!",
        "payment_sub_headline": "Buy this super product today and save up to 20% when you buy",
        "payment_methods": {
            "visa": "1",
            "americanexpress": "1",
            "mastercard": "1",
            "paypal": "1",
            "ideal": "1"
        },
        "page_content_1_layout": "fullwidth",
        "page_content_1_showtitle": "0",
        "page_content_1_source1": "178",
        "page_content_1_source2": "0",
        "page_content_2_layout": "fullwidth",
        "page_content_2_showtitle": "0",
        "page_content_2_source1": "262",
        "page_content_2_source2": "0",
        "page_content_3_layout": "fullwidth",
        "page_content_3_showtitle": "0",
        "page_content_3_source1": "0",
        "page_content_3_source2": "0",
        "page_content_4_layout": "fullwidth",
        "page_content_4_showtitle": "0",
        "page_content_4_source1": "0",
        "page_content_4_source2": "0"
    },
    "3": {
        "site_default_profile": "1",
        "landing_page_menu": "1",
        "custom_logo": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/logo2.png",
        "custom_favicon": "",
        "blog_title": "Blog",
        "header_info_label": "Call us for free!",
        "header_phone": "1-800-394-4333",
        "header_email": "",
        "custom_css": "",
        "custom_footer": "",
        "body_background": "#ffffff",
        "menu_background_active": "#dd4531",
        "link_color": "#d12727",
        "link_color_hover": "#c03220",
        "blog_button_background": "#d12727",
        "banner_gradient": {
            "start": "#cf5833",
            "end": "#ab2210"
        },
        "newsletter_background": "#dd4531",
        "pricing_highlight_background": "#dd4632",
        "pricing_highlight_hover_background": "#c03220",
        "font_body": {
            "size": "0.8",
            "unit": "em",
            "face": "Verdana*",
            "style": "regular",
            "color": "#333333"
        },
        "font_logo": {
            "size": "1.5",
            "unit": "em",
            "face": "Lato",
            "style": "900",
            "color": "#dd4531"
        },
        "font_logo_tagline": {
            "size": "1.25",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#999999"
        },
        "font_quotes": {
            "size": "1",
            "unit": "em",
            "face": "Verdana*",
            "color": "#333333",
            "style": "italic"
        },
        "font_heading_banner": {
            "size": "3",
            "unit": "em",
            "face": "Merriweather",
            "style": "700",
            "color": "#ffffff"
        },
        "font_section_title": {
            "size": "2.2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#dd4632"
        },
        "font_section_subtitle": {
            "size": "1.45",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#999999"
        },
        "font_newsletter_title": {
            "size": "1.8",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_big_testimonial": {
            "size": "1.4",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_pricing_title": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_pricing_sub_title": {
            "size": "1.05",
            "unit": "em",
            "face": "Verdana*",
            "style": "regular",
            "color": "#cccccc"
        },
        "font_pricing_sub_title_featured": "#f7c9c9",
        "font_pricing_price": {
            "size": "3.81",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_pricing_currency": {
            "size": "0.5",
            "unit": "em"
        },
        "font_heading_h1": {
            "size": "2.35",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h2": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h3": {
            "size": "1.6",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h4": {
            "size": "1.2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h5": {
            "size": "1.125",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h6": {
            "size": "1",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_page_title": {
            "size": "1.8",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_widget_title": {
            "size": "1.25",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_post_meta": {
            "size": "12",
            "unit": "px",
            "face": "Verdana*",
            "style": "regular",
            "color": "#999999"
        },
        "landingpage_blocks": {
            "disabled": {
                "placebo": "placebo",
                "block_page_content3": "Page Content 3",
                "block_page_content4": "Page Content 4",
                "block_widget1": "Widget 1",
                "block_widget2": "Widget 2"
            },
            "enabled": {
                "placebo": "placebo",
                "block_social_header": "Header Social Icons",
                "block_features": "List of Features",
                "block_page_content1": "Page Content 1",
                "block_gallery": "Gallery",
                "block_big_testimonial": "Feat. Testimonial",
                "block_page_content2": "Page Content 2",
                "block_small_testimonials": "Small Testimonials",
                "block_newsletter": "Newsletter Signup Form",
                "block_video": "Video Section",
                "block_pricing_table": "Pricing Table",
                "block_payment": "Payment Options",
                "block_social_side": "Sidebar Social Icons"
            }
        },
        "banner_position": "right",
        "banner_title": "A powerful WordPress landing page template",
        "banner_text": "This theme focuses on the key elements: the product itself, building trust, very easy to customize and the best thing, it is built with WordPress!",
        "banner_bullets": "Unlimited colors, supports Image, Video and Slider\r\nPowered by the fabulous HTML5/CSS3\r\nExtremely customizable, to the last Pixel",
        "banner_layout_select": "Video",
        "banner_image": "",
        "banner_slider": {
            "1": {
                "order": "1",
                "title": "",
                "url": "",
                "link": ""
            }
        },
        "banner_video": "<iframe src=\"http://player.vimeo.com/video/23534361\" width=\"460\" height=\"320\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>",
        "action_buttons_layout": "Two Buttons/Split-Button",
        "action_button1_text": "Buy for 20$",
        "action_button1_link": "#",
        "action_button1_target": "Current Window",
        "action_button2_text": "Try our Demo",
        "action_button2_link": "#",
        "action_button2_target": "Current Window",
        "social_blocks_header": {
            "disabled": {
                "placebo": "placebo",
                "stumbleupon": "StumbleUpon",
                "youtube": "YouTube",
                "vimeo": "Vimeo",
                "linkedin": "LinkedIn",
                "pinterest": "Pinterest",
                "digg": "Digg",
                "myspace": "MySpace",
                "picasa": "Picasa",
                "flickr": "flickr",
                "dribbble": "Dribbble",
                "blogger": "Blogger"
            },
            "enabled": {
                "placebo": "placebo",
                "twitter": "Twitter",
                "facebook": "Facebook",
                "rss": "RSS Feed",
                "feedback": "Feedback Form"
            }
        },
        "social_blocks_sidebar": {
            "disabled": {
                "placebo": "placebo",
                "feedback": "Feedback Form",
                "facebook": "Facebook",
                "rss": "RSS Feed",
                "twitter": "Twitter",
                "stumbleupon": "StumbleUpon",
                "youtube": "YouTube",
                "vimeo": "Vimeo",
                "linkedin": "LinkedIn",
                "pinterest": "Pinterest",
                "digg": "Digg",
                "myspace": "MySpace",
                "picasa": "Picasa",
                "flickr": "flickr",
                "dribbble": "Dribbble",
                "blogger": "Blogger"
            },
            "enabled": {
                "placebo": "placebo"
            }
        },
        "social_twitter": "",
        "social_facebook": "",
        "social_stumbleupon": "",
        "social_youtube": "",
        "social_vimeo": "",
        "social_linkedin": "",
        "social_pinterest": "",
        "social_digg": "",
        "social_myspace": "",
        "social_picasa": "",
        "social_flickr": "",
        "social_dribbble": "",
        "social_blogger": "",
        "social_rss": "",
        "social_feedback": "",
        "features_headline": "Sell your product online! Without the clutter",
        "features_sub_headline": "Sell your product with this brand new landing page",
        "features": {
            "1": {
                "order": "1",
                "title": "Sell your product online",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_1.png",
                "description": "Use a professional landing page template that just converts."
            },
            "2": {
                "order": "2",
                "title": "Very easy to customize",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_2.png",
                "description": "Build in Options Panel lets you customize almost every pixel"
            },
            "3": {
                "order": "3",
                "title": "Unlimited color schemes",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_3.png",
                "description": "Use build in Presets or create your own color schemes"
            },
            "4": {
                "order": "4",
                "title": "Powered by HTML5/CSS3",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_4.png",
                "description": "The latest standards for maximum compatibility."
            },
            "5": {
                "order": "5",
                "title": "Designed to convert",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_6.png",
                "description": "Incorporates proven practices for landing pages"
            },
            "6": {
                "order": "6",
                "title": "Split testing",
                "url": "",
                "description": "Create multiple page profiles and use them for split testing"
            }
        },
        "gallery_headline": "Take a look at our Screenshots",
        "gallery_sub_headline": "",
        "gallery": {
            "1": {
                "order": "1",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/11.jpg",
                "description": "Image description"
            },
            "2": {
                "order": "2",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/21.jpg",
                "description": "Image Description"
            },
            "3": {
                "order": "3",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/31.jpg",
                "description": "Image Description"
            },
            "4": {
                "order": "4",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/4.jpg",
                "description": "Image Description"
            },
            "5": {
                "order": "5",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/52.jpg",
                "description": "Image Description"
            },
            "6": {
                "order": "6",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/61.jpg",
                "description": "Image Description"
            }
        },
        "testimonial_quote": "“Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.”",
        "testimonial_name": "John Doe",
        "testimonial_title": "The Doe Company",
        "testimonials_headline": "What other customers are saying",
        "testimonials_sub_headline": "Now if we did not convince you, maybe a few words from our customers will!",
        "testimonials": {
            "1": {
                "order": "1",
                "title": "John Doe",
                "subtitle": "Some Company Inc.",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/11/johndoe.jpg",
                "description": "Lorem ipsum dolor sit amet, consetetur sadipscing elitrrmod tempor invidunt ut m et justo duo dolores et ea rebum. "
            },
            "2": {
                "order": "2",
                "title": "John Doe",
                "subtitle": "Some Company Inc.",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/11/johndoe.jpg",
                "description": "Lorem ipsum dolor sit amet, consetetur sadipscing elitrrmod tempor invidunt ut m et justo duo dolores et ea rebum. "
            },
            "3": {
                "order": "3",
                "title": "John Doe",
                "subtitle": "Some Company Inc.",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/11/johndoe.jpg",
                "description": "Lorem ipsum dolor sit amet, consetetur sadipscing elitrrmod tempor invidunt ut m et justo duo dolores et ea rebum. "
            }
        },
        "newsletter_headline_1": "Join our newsletter for exclusive deals",
        "newsletter_button": "Subscribe",
        "newsletter_placeholder": "Enter your email address",
        "newsletter_select": "mailchimp",
        "newsletter_group_aweber": "0",
        "newsletter_aweber_url": "",
        "newsletter_aweber_meta_web_form_id": "",
        "newsletter_aweber_meta_split_id": "",
        "newsletter_aweber_listname": "",
        "newsletter_aweber_redirect": "",
        "newsletter_aweber_meta_adtracking": "",
        "newsletter_aweber_meta_message": "",
        "newsletter_group_mailchimp": "1",
        "newsletter_mailchimp_url": "#",
        "newsletter_mailchimp_u": "#",
        "newsletter_mailchimp_id": "#",
        "newsletter_group_custom": "0",
        "newsletter_custom": "",
        "pricing_headline": "A price that fits your needs",
        "pricing_sub_headline": "Student or Company - we have the right offer for you",
        "pricing_button_text": "Buy now",
        "pricing_currency": "$",
        "pricing_packages": {
            "1": {
                "order": "1",
                "title": "Basic",
                "subtitle": "All you need to start",
                "link": "",
                "description": "15 Projects\r\n5 GB Storage\r\nUnlimited Users\r\nNo Time tracking\r\nEnhanced Security",
                "price": "17",
                "badge": "badge_bestseller",
                "highlighted": "no"
            },
            "2": {
                "order": "2",
                "title": "Standard",
                "subtitle": "Small price - big deal",
                "link": "",
                "description": "15 Projects\r\n5 GB Storage\r\nUnlimited Users\r\nNo Time tracking\r\nEnhanced Security",
                "price": "27",
                "badge": "",
                "highlighted": "no"
            },
            "3": {
                "order": "3",
                "title": "Premium",
                "subtitle": "Our most favorite package",
                "link": "",
                "description": "15 Projects\r\n5 GB Storage\r\nUnlimited Users\r\nNo Time tracking\r\nEnhanced Security",
                "price": "37",
                "badge": "badge_bestvalue",
                "highlighted": "yes"
            },
            "4": {
                "order": "4",
                "title": "Business",
                "subtitle": "Perfect company solution",
                "link": "",
                "description": "15 Projects\r\n5 GB Storage\r\nUnlimited Users\r\nNo Time tracking\r\nEnhanced Security",
                "price": "47",
                "badge": "",
                "highlighted": "no"
            }
        },
        "payment_headline": "Interested? What are you waiting for!",
        "payment_sub_headline": "Buy this super product today and save up to 20% when you buy",
        "payment_methods": {
            "visa": "1",
            "americanexpress": "1",
            "mastercard": "1",
            "paypal": "1",
            "ideal": "1"
        },
        "page_content_1_layout": "fullwidth",
        "page_content_1_showtitle": "0",
        "page_content_1_source1": "178",
        "page_content_1_source2": "0",
        "page_content_2_layout": "fullwidth",
        "page_content_2_showtitle": "0",
        "page_content_2_source1": "262",
        "page_content_2_source2": "0",
        "page_content_3_layout": "fullwidth",
        "page_content_3_showtitle": "0",
        "page_content_3_source1": "0",
        "page_content_3_source2": "0",
        "page_content_4_layout": "fullwidth",
        "page_content_4_showtitle": "0",
        "page_content_4_source1": "0",
        "page_content_4_source2": "0"
    },
    "4": {
        "site_default_profile": "1",
        "landing_page_menu": "1",
        "custom_logo": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/logo2.png",
        "custom_favicon": "",
        "blog_title": "Blog",
        "header_info_label": "Call us for free!",
        "header_phone": "1-800-394-4333",
        "header_email": "",
        "custom_css": "",
        "custom_footer": "",
        "body_background": "#ffffff",
        "menu_background_active": "#dd4531",
        "link_color": "#d12727",
        "link_color_hover": "#c03220",
        "blog_button_background": "#d12727",
        "banner_gradient": {
            "start": "#cf5833",
            "end": "#ab2210"
        },
        "newsletter_background": "#dd4531",
        "pricing_highlight_background": "#dd4632",
        "pricing_highlight_hover_background": "#c03220",
        "font_body": {
            "size": "0.8",
            "unit": "em",
            "face": "Verdana*",
            "style": "regular",
            "color": "#333333"
        },
        "font_logo": {
            "size": "1.5",
            "unit": "em",
            "face": "Lato",
            "style": "900",
            "color": "#dd4531"
        },
        "font_logo_tagline": {
            "size": "1.25",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#999999"
        },
        "font_quotes": {
            "size": "1",
            "unit": "em",
            "face": "Verdana*",
            "color": "#333333",
            "style": "italic"
        },
        "font_heading_banner": {
            "size": "3",
            "unit": "em",
            "face": "Merriweather",
            "style": "700",
            "color": "#ffffff"
        },
        "font_section_title": {
            "size": "2.2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#dd4632"
        },
        "font_section_subtitle": {
            "size": "1.45",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#999999"
        },
        "font_newsletter_title": {
            "size": "1.8",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_big_testimonial": {
            "size": "1.4",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_pricing_title": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_pricing_sub_title": {
            "size": "1.05",
            "unit": "em",
            "face": "Verdana*",
            "style": "regular",
            "color": "#cccccc"
        },
        "font_pricing_sub_title_featured": "#f7c9c9",
        "font_pricing_price": {
            "size": "3.81",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_pricing_currency": {
            "size": "0.5",
            "unit": "em"
        },
        "font_heading_h1": {
            "size": "2.35",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h2": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h3": {
            "size": "1.6",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h4": {
            "size": "1.2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h5": {
            "size": "1.125",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h6": {
            "size": "1",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_page_title": {
            "size": "1.8",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_widget_title": {
            "size": "1.25",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_post_meta": {
            "size": "12",
            "unit": "px",
            "face": "Verdana*",
            "style": "regular",
            "color": "#999999"
        },
        "landingpage_blocks": {
            "disabled": {
                "placebo": "placebo",
                "block_page_content3": "Page Content 3",
                "block_page_content4": "Page Content 4",
                "block_widget1": "Widget 1",
                "block_widget2": "Widget 2"
            },
            "enabled": {
                "placebo": "placebo",
                "block_social_header": "Header Social Icons",
                "block_features": "List of Features",
                "block_page_content1": "Page Content 1",
                "block_gallery": "Gallery",
                "block_big_testimonial": "Feat. Testimonial",
                "block_page_content2": "Page Content 2",
                "block_small_testimonials": "Small Testimonials",
                "block_newsletter": "Newsletter Signup Form",
                "block_video": "Video Section",
                "block_pricing_table": "Pricing Table",
                "block_payment": "Payment Options",
                "block_social_side": "Sidebar Social Icons"
            }
        },
        "banner_position": "left",
        "banner_title": "A powerful WordPress landing page template",
        "banner_text": "This theme focuses on the key elements: the product itself, building trust, very easy to customize and the best thing, it is built with WordPress!",
        "banner_bullets": "Unlimited colors, supports Image, Video and Slider\r\nPowered by the fabulous HTML5/CSS3\r\nExtremely customizable, to the last Pixel",
        "banner_layout_select": "Single Image",
        "banner_image": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/11/banner_image1.png",
        "banner_slider": {
            "1": {
                "order": "1",
                "title": "",
                "url": "",
                "link": ""
            }
        },
        "banner_video": "<iframe src=\"http://player.vimeo.com/video/23534361\" width=\"460\" height=\"320\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>",
        "action_buttons_layout": "Two Buttons/Split-Button",
        "action_button1_text": "Buy for 20$",
        "action_button1_link": "#",
        "action_button1_target": "Current Window",
        "action_button2_text": "Try our Demo",
        "action_button2_link": "#",
        "action_button2_target": "Current Window",
        "social_blocks_header": {
            "disabled": {
                "placebo": "placebo",
                "stumbleupon": "StumbleUpon",
                "youtube": "YouTube",
                "vimeo": "Vimeo",
                "linkedin": "LinkedIn",
                "pinterest": "Pinterest",
                "digg": "Digg",
                "myspace": "MySpace",
                "picasa": "Picasa",
                "flickr": "flickr",
                "dribbble": "Dribbble",
                "blogger": "Blogger"
            },
            "enabled": {
                "placebo": "placebo",
                "twitter": "Twitter",
                "facebook": "Facebook",
                "rss": "RSS Feed",
                "feedback": "Feedback Form"
            }
        },
        "social_blocks_sidebar": {
            "disabled": {
                "placebo": "placebo",
                "facebook": "Facebook",
                "feedback": "Feedback Form",
                "rss": "RSS Feed",
                "twitter": "Twitter",
                "stumbleupon": "StumbleUpon",
                "youtube": "YouTube",
                "vimeo": "Vimeo",
                "linkedin": "LinkedIn",
                "pinterest": "Pinterest",
                "digg": "Digg",
                "myspace": "MySpace",
                "picasa": "Picasa",
                "flickr": "flickr",
                "dribbble": "Dribbble",
                "blogger": "Blogger"
            },
            "enabled": {
                "placebo": "placebo"
            }
        },
        "social_twitter": "",
        "social_facebook": "",
        "social_stumbleupon": "",
        "social_youtube": "",
        "social_vimeo": "",
        "social_linkedin": "",
        "social_pinterest": "",
        "social_digg": "",
        "social_myspace": "",
        "social_picasa": "",
        "social_flickr": "",
        "social_dribbble": "",
        "social_blogger": "",
        "social_rss": "",
        "social_feedback": "",
        "features_headline": "Sell your product online! Without the clutter",
        "features_sub_headline": "Sell your product with this brand new landing page",
        "features": {
            "1": {
                "order": "1",
                "title": "Sell your product online",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_1.png",
                "description": "Use a professional landing page template that just converts."
            },
            "2": {
                "order": "2",
                "title": "Very easy to customize",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_2.png",
                "description": "Build in Options Panel lets you customize almost every pixel"
            },
            "3": {
                "order": "3",
                "title": "Unlimited color schemes",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_3.png",
                "description": "Use build in Presets or create your own color schemes"
            },
            "4": {
                "order": "4",
                "title": "Powered by HTML5/CSS3",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_4.png",
                "description": "The latest standards for maximum compatibility."
            },
            "5": {
                "order": "5",
                "title": "Designed to convert",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_6.png",
                "description": "Incorporates proven practices for landing pages"
            },
            "6": {
                "order": "6",
                "title": "Split testing",
                "url": "",
                "description": "Create multiple page profiles and use them for split testing"
            }
        },
        "gallery_headline": "Take a look at our Screenshots",
        "gallery_sub_headline": "",
        "gallery": {
            "1": {
                "order": "1",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/11.jpg",
                "description": "Image description"
            },
            "2": {
                "order": "2",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/21.jpg",
                "description": "Image Description"
            },
            "3": {
                "order": "3",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/31.jpg",
                "description": "Image Description"
            },
            "4": {
                "order": "4",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/4.jpg",
                "description": "Image Description"
            },
            "5": {
                "order": "5",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/52.jpg",
                "description": "Image Description"
            },
            "6": {
                "order": "6",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/61.jpg",
                "description": "Image Description"
            }
        },
        "testimonial_quote": "“Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.”",
        "testimonial_name": "John Doe",
        "testimonial_title": "The Doe Company",
        "testimonials_headline": "What other customers are saying",
        "testimonials_sub_headline": "Now if we did not convince you, maybe a few words from our customers will!",
        "testimonials": {
            "1": {
                "order": "1",
                "title": "John Doe",
                "subtitle": "Some Company Inc.",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/11/johndoe.jpg",
                "description": "Lorem ipsum dolor sit amet, consetetur sadipscing elitrrmod tempor invidunt ut m et justo duo dolores et ea rebum. "
            },
            "2": {
                "order": "2",
                "title": "John Doe",
                "subtitle": "Some Company Inc.",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/11/johndoe.jpg",
                "description": "Lorem ipsum dolor sit amet, consetetur sadipscing elitrrmod tempor invidunt ut m et justo duo dolores et ea rebum. "
            },
            "3": {
                "order": "3",
                "title": "John Doe",
                "subtitle": "Some Company Inc.",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/11/johndoe.jpg",
                "description": "Lorem ipsum dolor sit amet, consetetur sadipscing elitrrmod tempor invidunt ut m et justo duo dolores et ea rebum. "
            }
        },
        "newsletter_headline_1": "Join our newsletter for exclusive deals",
        "newsletter_button": "Subscribe",
        "newsletter_placeholder": "Enter your email address",
        "newsletter_select": "mailchimp",
        "newsletter_group_aweber": "0",
        "newsletter_aweber_url": "",
        "newsletter_aweber_meta_web_form_id": "",
        "newsletter_aweber_meta_split_id": "",
        "newsletter_aweber_listname": "",
        "newsletter_aweber_redirect": "",
        "newsletter_aweber_meta_adtracking": "",
        "newsletter_aweber_meta_message": "",
        "newsletter_group_mailchimp": "1",
        "newsletter_mailchimp_url": "#",
        "newsletter_mailchimp_u": "#",
        "newsletter_mailchimp_id": "#",
        "newsletter_group_custom": "0",
        "newsletter_custom": "",
        "pricing_headline": "A price that fits your needs",
        "pricing_sub_headline": "Student or Company - we have the right offer for you",
        "pricing_button_text": "Buy now",
        "pricing_currency": "$",
        "pricing_packages": {
            "1": {
                "order": "1",
                "title": "Basic",
                "subtitle": "All you need to start",
                "link": "",
                "description": "15 Projects\r\n5 GB Storage\r\nUnlimited Users\r\nNo Time tracking\r\nEnhanced Security",
                "price": "17",
                "badge": "badge_bestseller",
                "highlighted": "no"
            },
            "2": {
                "order": "2",
                "title": "Standard",
                "subtitle": "Small price - big deal",
                "link": "",
                "description": "15 Projects\r\n5 GB Storage\r\nUnlimited Users\r\nNo Time tracking\r\nEnhanced Security",
                "price": "27",
                "badge": "",
                "highlighted": "no"
            },
            "3": {
                "order": "3",
                "title": "Premium",
                "subtitle": "Our most favorite package",
                "link": "",
                "description": "15 Projects\r\n5 GB Storage\r\nUnlimited Users\r\nNo Time tracking\r\nEnhanced Security",
                "price": "37",
                "badge": "badge_bestvalue",
                "highlighted": "yes"
            },
            "4": {
                "order": "4",
                "title": "Business",
                "subtitle": "Perfect company solution",
                "link": "",
                "description": "15 Projects\r\n5 GB Storage\r\nUnlimited Users\r\nNo Time tracking\r\nEnhanced Security",
                "price": "47",
                "badge": "",
                "highlighted": "no"
            }
        },
        "payment_headline": "Interested? What are you waiting for!",
        "payment_sub_headline": "Buy this super product today and save up to 20% when you buy",
        "payment_methods": {
            "visa": "1",
            "americanexpress": "1",
            "mastercard": "1",
            "paypal": "1",
            "ideal": "1"
        },
        "page_content_1_layout": "fullwidth",
        "page_content_1_showtitle": "0",
        "page_content_1_source1": "178",
        "page_content_1_source2": "0",
        "page_content_2_layout": "fullwidth",
        "page_content_2_showtitle": "0",
        "page_content_2_source1": "262",
        "page_content_2_source2": "0",
        "page_content_3_layout": "fullwidth",
        "page_content_3_showtitle": "0",
        "page_content_3_source1": "0",
        "page_content_3_source2": "0",
        "page_content_4_layout": "fullwidth",
        "page_content_4_showtitle": "0",
        "page_content_4_source1": "0",
        "page_content_4_source2": "0"
    },
    "5": {
        "site_default_profile": "1",
        "landing_page_menu": "1",
        "custom_logo": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/logo2.png",
        "custom_favicon": "",
        "blog_title": "Blog",
        "header_info_label": "Call us for free!",
        "header_phone": "1-800-394-4333",
        "header_email": "",
        "custom_css": "",
        "custom_footer": "",
        "body_background": "#ffffff",
        "menu_background_active": "#048585",
        "link_color": "#31a09a",
        "link_color_hover": "#07857f",
        "blog_button_background": "#048585",
        "banner_gradient": {
            "start": "#47c0ba",
            "end": "#015c5a"
        },
        "newsletter_background": "#048585",
        "pricing_highlight_background": "#31a09a",
        "pricing_highlight_hover_background": "#07857f",
        "font_body": {
            "size": "0.8",
            "unit": "em",
            "face": "Verdana*",
            "style": "regular",
            "color": "#333333"
        },
        "font_logo": {
            "size": "1.5",
            "unit": "em",
            "face": "Lato",
            "style": "900",
            "color": "#048585"
        },
        "font_logo_tagline": {
            "size": "1.25",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#999999"
        },
        "font_quotes": {
            "size": "1",
            "unit": "em",
            "face": "Verdana*",
            "color": "#333333",
            "style": "italic"
        },
        "font_heading_banner": {
            "size": "3",
            "unit": "em",
            "face": "Merriweather",
            "style": "700",
            "color": "#ffffff"
        },
        "font_section_title": {
            "size": "2.2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#048585"
        },
        "font_section_subtitle": {
            "size": "1.45",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#999999"
        },
        "font_newsletter_title": {
            "size": "1.8",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_big_testimonial": {
            "size": "1.4",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_pricing_title": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_pricing_sub_title": {
            "size": "1.05",
            "unit": "em",
            "face": "Verdana*",
            "style": "regular",
            "color": "#cccccc"
        },
        "font_pricing_sub_title_featured": "#d3ffff",
        "font_pricing_price": {
            "size": "3.81",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_pricing_currency": {
            "size": "0.5",
            "unit": "em"
        },
        "font_heading_h1": {
            "size": "2.35",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h2": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h3": {
            "size": "1.6",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h4": {
            "size": "1.2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h5": {
            "size": "1.125",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_heading_h6": {
            "size": "1",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_page_title": {
            "size": "1.8",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_widget_title": {
            "size": "1.25",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_post_meta": {
            "size": "12",
            "unit": "px",
            "face": "Verdana*",
            "style": "regular",
            "color": "#999999"
        },
        "landingpage_blocks": {
            "disabled": {
                "placebo": "placebo",
                "block_page_content3": "Page Content 3",
                "block_page_content4": "Page Content 4",
                "block_widget1": "Widget 1",
                "block_widget2": "Widget 2"
            },
            "enabled": {
                "placebo": "placebo",
                "block_social_header": "Header Social Icons",
                "block_features": "List of Features",
                "block_page_content1": "Page Content 1",
                "block_gallery": "Gallery",
                "block_big_testimonial": "Feat. Testimonial",
                "block_page_content2": "Page Content 2",
                "block_small_testimonials": "Small Testimonials",
                "block_newsletter": "Newsletter Signup Form",
                "block_video": "Video Section",
                "block_pricing_table": "Pricing Table",
                "block_payment": "Payment Options",
                "block_social_side": "Sidebar Social Icons"
            }
        },
        "banner_position": "right",
        "banner_title": "A powerful WordPress landing page template",
        "banner_text": "This theme focuses on the key elements: the product itself, building trust, very easy to customize and the best thing, it is built with WordPress!",
        "banner_bullets": "Unlimited colors, supports Image, Video and Slider\r\nPowered by the fabulous HTML5/CSS3\r\nExtremely customizable, to the last Pixel",
        "banner_layout_select": "Single Image",
        "banner_image": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/11/banner_image1.png",
        "banner_slider": {
            "1": {
                "order": "1",
                "title": "",
                "url": "",
                "link": ""
            }
        },
        "banner_video": "",
        "action_buttons_layout": "Two Buttons/Split-Button",
        "action_button1_text": "Buy for 20$",
        "action_button1_link": "#",
        "action_button1_target": "Current Window",
        "action_button2_text": "Try our Demo",
        "action_button2_link": "#",
        "action_button2_target": "Current Window",
        "social_blocks_header": {
            "disabled": {
                "placebo": "placebo",
                "stumbleupon": "StumbleUpon",
                "youtube": "YouTube",
                "vimeo": "Vimeo",
                "linkedin": "LinkedIn",
                "pinterest": "Pinterest",
                "digg": "Digg",
                "myspace": "MySpace",
                "picasa": "Picasa",
                "flickr": "flickr",
                "dribbble": "Dribbble",
                "blogger": "Blogger"
            },
            "enabled": {
                "placebo": "placebo",
                "twitter": "Twitter",
                "facebook": "Facebook",
                "rss": "RSS Feed",
                "feedback": "Feedback Form"
            }
        },
        "social_blocks_sidebar": {
            "disabled": {
                "placebo": "placebo",
                "feedback": "Feedback Form",
                "facebook": "Facebook",
                "rss": "RSS Feed",
                "twitter": "Twitter",
                "stumbleupon": "StumbleUpon",
                "youtube": "YouTube",
                "vimeo": "Vimeo",
                "linkedin": "LinkedIn",
                "pinterest": "Pinterest",
                "digg": "Digg",
                "myspace": "MySpace",
                "picasa": "Picasa",
                "flickr": "flickr",
                "dribbble": "Dribbble",
                "blogger": "Blogger"
            },
            "enabled": {
                "placebo": "placebo"
            }
        },
        "social_twitter": "",
        "social_facebook": "",
        "social_stumbleupon": "",
        "social_youtube": "",
        "social_vimeo": "",
        "social_linkedin": "",
        "social_pinterest": "",
        "social_digg": "",
        "social_myspace": "",
        "social_picasa": "",
        "social_flickr": "",
        "social_dribbble": "",
        "social_blogger": "",
        "social_rss": "",
        "social_feedback": "",
        "features_headline": "Sell your product online! Without the clutter",
        "features_sub_headline": "Sell your product with this brand new landing page",
        "features": {
            "1": {
                "order": "1",
                "title": "Sell your product online",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_1.png",
                "description": "Use a professional landing page template that just converts."
            },
            "2": {
                "order": "2",
                "title": "Very easy to customize",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_2.png",
                "description": "Build in Options Panel lets you customize almost every pixel"
            },
            "3": {
                "order": "3",
                "title": "Unlimited color schemes",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_3.png",
                "description": "Use build in Presets or create your own color schemes"
            },
            "4": {
                "order": "4",
                "title": "Powered by HTML5/CSS3",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_4.png",
                "description": "The latest standards for maximum compatibility."
            },
            "5": {
                "order": "5",
                "title": "Designed to convert",
                "url": "http://shapingrain.com/demo/justlandedwp/wp-content/uploads/2013/01/icon_6.png",
                "description": "Incorporates proven practices for landing pages"
            },
            "6": {
                "order": "6",
                "title": "Split testing",
                "url": "",
                "description": "Create multiple page profiles and use them for split testing"
            }
        },
        "gallery_headline": "Take a look at our Screenshots",
        "gallery_sub_headline": "",
        "gallery": {
            "1": {
                "order": "1",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/11.jpg",
                "description": "Image description"
            },
            "2": {
                "order": "2",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/21.jpg",
                "description": "Image Description"
            },
            "3": {
                "order": "3",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/31.jpg",
                "description": "Image Description"
            },
            "4": {
                "order": "4",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/4.jpg",
                "description": "Image Description"
            },
            "5": {
                "order": "5",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/52.jpg",
                "description": "Image Description"
            },
            "6": {
                "order": "6",
                "title": "Image Title",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/12/61.jpg",
                "description": "Image Description"
            }
        },
        "testimonial_quote": "“Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.”",
        "testimonial_name": "John Doe",
        "testimonial_title": "The Doe Company",
        "testimonials_headline": "What other customers are saying",
        "testimonials_sub_headline": "Now if we did not convince you, maybe a few words from our customers will!",
        "testimonials": {
            "1": {
                "order": "1",
                "title": "John Doe",
                "subtitle": "Some Company Inc.",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/11/johndoe.jpg",
                "description": "Lorem ipsum dolor sit amet, consetetur sadipscing elitrrmod tempor invidunt ut m et justo duo dolores et ea rebum. "
            },
            "2": {
                "order": "2",
                "title": "John Doe",
                "subtitle": "Some Company Inc.",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/11/johndoe.jpg",
                "description": "Lorem ipsum dolor sit amet, consetetur sadipscing elitrrmod tempor invidunt ut m et justo duo dolores et ea rebum. "
            },
            "3": {
                "order": "3",
                "title": "John Doe",
                "subtitle": "Some Company Inc.",
                "url": "http://www.shapingrain.com/dev/justlandedwp/wp-content/uploads/2012/11/johndoe.jpg",
                "description": "Lorem ipsum dolor sit amet, consetetur sadipscing elitrrmod tempor invidunt ut m et justo duo dolores et ea rebum. "
            }
        },
        "newsletter_headline_1": "Join our newsletter for exclusive deals",
        "newsletter_button": "Subscribe",
        "newsletter_placeholder": "Enter your email address",
        "newsletter_select": "mailchimp",
        "newsletter_group_aweber": "0",
        "newsletter_aweber_url": "",
        "newsletter_aweber_meta_web_form_id": "",
        "newsletter_aweber_meta_split_id": "",
        "newsletter_aweber_listname": "",
        "newsletter_aweber_redirect": "",
        "newsletter_aweber_meta_adtracking": "",
        "newsletter_aweber_meta_message": "",
        "newsletter_group_mailchimp": "1",
        "newsletter_mailchimp_url": "#",
        "newsletter_mailchimp_u": "#",
        "newsletter_mailchimp_id": "#",
        "newsletter_group_custom": "0",
        "newsletter_custom": "",
        "pricing_headline": "A price that fits your needs",
        "pricing_sub_headline": "Student or Company - we have the right offer for you",
        "pricing_button_text": "Buy now",
        "pricing_currency": "$",
        "pricing_packages": {
            "1": {
                "order": "1",
                "title": "Basic",
                "subtitle": "All you need to start",
                "link": "",
                "description": "15 Projects\r\n5 GB Storage\r\nUnlimited Users\r\nNo Time tracking\r\nEnhanced Security",
                "price": "17",
                "badge": "badge_bestseller",
                "highlighted": "no"
            },
            "2": {
                "order": "2",
                "title": "Standard",
                "subtitle": "Small price - big deal",
                "link": "",
                "description": "15 Projects\r\n5 GB Storage\r\nUnlimited Users\r\nNo Time tracking\r\nEnhanced Security",
                "price": "27",
                "badge": "",
                "highlighted": "no"
            },
            "3": {
                "order": "3",
                "title": "Premium",
                "subtitle": "Our most favorite package",
                "link": "",
                "description": "15 Projects\r\n5 GB Storage\r\nUnlimited Users\r\nNo Time tracking\r\nEnhanced Security",
                "price": "37",
                "badge": "badge_bestvalue",
                "highlighted": "yes"
            },
            "4": {
                "order": "4",
                "title": "Business",
                "subtitle": "Perfect company solution",
                "link": "",
                "description": "15 Projects\r\n5 GB Storage\r\nUnlimited Users\r\nNo Time tracking\r\nEnhanced Security",
                "price": "47",
                "badge": "",
                "highlighted": "no"
            }
        },
        "payment_headline": "Interested? What are you waiting for!",
        "payment_sub_headline": "Buy this super product today and save up to 20% when you buy",
        "payment_methods": {
            "visa": "1",
            "americanexpress": "1",
            "mastercard": "1",
            "paypal": "1",
            "ideal": "1"
        },
        "page_content_1_layout": "fullwidth",
        "page_content_1_showtitle": "0",
        "page_content_1_source1": "178",
        "page_content_1_source2": "0",
        "page_content_2_layout": "fullwidth",
        "page_content_2_showtitle": "0",
        "page_content_2_source1": "262",
        "page_content_2_source2": "0",
        "page_content_3_layout": "fullwidth",
        "page_content_3_showtitle": "0",
        "page_content_3_source1": "0",
        "page_content_3_source2": "0",
        "page_content_4_layout": "fullwidth",
        "page_content_4_showtitle": "0",
        "page_content_4_source1": "0",
        "page_content_4_source2": "0"
    },
    "6": {
        "site_default_profile": "1",
        "landing_page_menu": "1",
        "custom_logo": "",
        "custom_favicon": "",
        "blog_title": "Blog",
        "header_info_label": "",
        "header_phone": "",
        "header_email": "",
        "custom_css": "",
        "custom_footer": "",
        "body_background": "#ffffff",
        "menu_background_active": "#dd4631",
        "link_color": "#dd4531",
        "link_color_hover": "#bf321f",
        "blog_button_background": "#dd4631",
        "banner_gradient": {
            "start": "#cf5833",
            "end": "#ab2210"
        },
        "newsletter_background": "#dd4631",
        "pricing_highlight_background": "#dd4631",
        "pricing_highlight_hover_background": "#c03220",
        "font_body": {
            "size": "12",
            "unit": "px",
            "face": "Arial*",
            "color": "#000000"
        },
        "font_logo": {
            "size": "12",
            "unit": "px",
            "face": "Lato",
            "style": "900",
            "color": "#dd4632"
        },
        "font_logo_tagline": {
            "size": "1.25",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#999999"
        },
        "font_quotes": {
            "size": "1",
            "unit": "em",
            "face": "Verdana*",
            "color": "#333333",
            "style": "italic"
        },
        "font_heading_banner": {
            "size": "3",
            "unit": "em",
            "face": "Merriweather",
            "style": "700",
            "color": "#ffffff"
        },
        "font_section_title": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#dd4632"
        },
        "font_section_subtitle": {
            "size": "1.6",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#999999"
        },
        "font_newsletter_title": {
            "size": "1.8",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_big_testimonial": {
            "size": "1.4",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_pricing_title": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_pricing_sub_title": {
            "size": "1.05",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#cccccc"
        },
        "font_pricing_sub_title_featured": "#cccccc",
        "font_pricing_price": {
            "size": "3.81",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_pricing_currency": {
            "size": "0.5",
            "unit": "em"
        },
        "font_heading_h1": {
            "size": "2.35",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_heading_h2": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_heading_h3": {
            "size": "1.6",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_heading_h4": {
            "size": "1.4",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_heading_h5": {
            "size": "1.2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_heading_h6": {
            "size": "1",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_page_title": {
            "size": "2.35",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_widget_title": {
            "size": "1.25",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_post_meta": {
            "size": "12",
            "unit": "px",
            "face": "Verdana*",
            "style": "regular",
            "color": "#999999"
        },
        "landingpage_blocks": {
            "disabled": {
                "placebo": "placebo",
                "block_page_content1": "Page Content 1",
                "block_page_content2": "Page Content 2",
                "block_page_content3": "Page Content 3",
                "block_page_content4": "Page Content 4",
                "block_widget1": "Widget 1",
                "block_widget2": "Widget 2"
            },
            "enabled": {
                "placebo": "placebo",
                "block_social_header": "Header Social Icons",
                "block_features": "List of Features",
                "block_gallery": "Gallery",
                "block_big_testimonial": "Feat. Testimonial",
                "block_small_testimonials": "Small Testimonials",
                "block_newsletter": "Newsletter Signup Form",
                "block_video": "Video Section",
                "block_pricing_table": "Pricing Table",
                "block_payment": "Payment Options",
                "block_social_side": "Sidebar Social Icons"
            }
        },
        "banner_position": "right",
        "banner_title": "",
        "banner_text": "",
        "banner_bullets": "",
        "banner_layout_select": "Slider",
        "banner_image": "",
        "banner_slider": {
            "1": {
                "order": "1",
                "title": "",
                "url": "",
                "link": ""
            }
        },
        "banner_video": "",
        "action_buttons_layout": "Two Buttons/Split-Button",
        "action_button1_text": "Buy for $10",
        "action_button1_link": "#",
        "action_button1_target": "Current Window",
        "action_button2_text": "Try our demo",
        "action_button2_link": "#",
        "action_button2_target": "Current Window",
        "social_blocks_header": {
            "disabled": {
                "placebo": "placebo",
                "stumbleupon": "StumbleUpon",
                "youtube": "YouTube",
                "vimeo": "Vimeo",
                "linkedin": "LinkedIn",
                "pinterest": "Pinterest",
                "digg": "Digg",
                "myspace": "MySpace",
                "picasa": "Picasa",
                "flickr": "flickr",
                "dribbble": "Dribbble",
                "blogger": "Blogger"
            },
            "enabled": {
                "placebo": "placebo",
                "twitter": "Twitter",
                "facebook": "Facebook",
                "rss": "RSS Feed",
                "feedback": "Feedback Form"
            }
        },
        "social_blocks_sidebar": {
            "disabled": {
                "placebo": "placebo",
                "stumbleupon": "StumbleUpon",
                "youtube": "YouTube",
                "vimeo": "Vimeo",
                "linkedin": "LinkedIn",
                "pinterest": "Pinterest",
                "digg": "Digg",
                "myspace": "MySpace",
                "picasa": "Picasa",
                "flickr": "flickr",
                "dribbble": "Dribbble",
                "blogger": "Blogger"
            },
            "enabled": {
                "placebo": "placebo",
                "twitter": "Twitter",
                "facebook": "Facebook",
                "rss": "RSS Feed",
                "feedback": "Feedback Form"
            }
        },
        "social_twitter": "#",
        "social_facebook": "#",
        "social_stumbleupon": "#",
        "social_youtube": "#",
        "social_vimeo": "#",
        "social_linkedin": "#",
        "social_pinterest": "#",
        "social_digg": "#",
        "social_myspace": "#",
        "social_picasa": "#",
        "social_flickr": "#",
        "social_dribbble": "#",
        "social_blogger": "#",
        "social_rss": "#",
        "social_feedback": "#",
        "features_headline": "",
        "features_sub_headline": "",
        "features": {
            "1": {
                "order": "1",
                "title": "",
                "url": "",
                "description": ""
            }
        },
        "gallery_headline": "",
        "gallery_sub_headline": "",
        "gallery": {
            "1": {
                "order": "1",
                "title": "",
                "url": "",
                "description": ""
            }
        },
        "testimonial_quote": "",
        "testimonial_name": "",
        "testimonial_title": "",
        "testimonials_headline": "",
        "testimonials_sub_headline": "",
        "testimonials": {
            "1": {
                "order": "1",
                "title": "",
                "subtitle": "",
                "url": "",
                "description": ""
            }
        },
        "newsletter_headline_1": "Join our newsletter for exclusive deals",
        "newsletter_button": "Subscribe",
        "newsletter_placeholder": "Enter your email address",
        "newsletter_select": "aweber",
        "newsletter_group_aweber": "0",
        "newsletter_aweber_url": "http://www.aweber.com/scripts/addlead.pl",
        "newsletter_aweber_meta_web_form_id": "",
        "newsletter_aweber_meta_split_id": "",
        "newsletter_aweber_listname": "",
        "newsletter_aweber_redirect": "",
        "newsletter_aweber_meta_adtracking": "My_Web_Form",
        "newsletter_aweber_meta_message": "1",
        "newsletter_group_mailchimp": "0",
        "newsletter_mailchimp_url": "http://sushisepeti.us6.list-manage.com/subscribe/post",
        "newsletter_mailchimp_u": "",
        "newsletter_mailchimp_id": "",
        "newsletter_group_custom": "0",
        "newsletter_custom": "",
        "pricing_headline": "",
        "pricing_sub_headline": "",
        "pricing_button_text": "Buy now",
        "pricing_currency": "$",
        "pricing_packages": {
            "1": {
                "order": "1",
                "title": "",
                "subtitle": "",
                "link": "",
                "description": "",
                "price": "",
                "badge": "",
                "highlighted": "no"
            }
        },
        "payment_headline": "Come on, it's time to buy our product...",
        "payment_sub_headline": "This is your final chance to convince a customer",
        "payment_methods": {
            "visa": "1",
            "paypal": "1"
        },
        "page_content_1_layout": "fullwidth",
        "page_content_1_showtitle": "0",
        "page_content_1_source1": "0",
        "page_content_1_source2": "0",
        "page_content_2_layout": "fullwidth",
        "page_content_2_showtitle": "0",
        "page_content_2_source1": "0",
        "page_content_2_source2": "0",
        "page_content_3_layout": "fullwidth",
        "page_content_3_showtitle": "0",
        "page_content_3_source1": "0",
        "page_content_3_source2": "0",
        "page_content_4_layout": "fullwidth",
        "page_content_4_showtitle": "0",
        "page_content_4_source1": "0",
        "page_content_4_source2": "0"
    },
    "7": {
        "introduction_home": "<h3 style=\"margin: 0 0 10px;\">Welcome to JustLanded - a landing page that simply works.</h3>\n\t\t\t\t\tWe've done everything to make this options panel as painless and easy to use as possible. However, if there is anything you need help with, please just let us know: <a href=\"mailto:info@shapingrain.com\">info@shapingrain.com</a>. We are also grateful for any bug reports and feature requests.",
        "news": "",
        "of_backup": "",
        "of_demo": "",
        "of_transfer": "",
        "site_default_profile": "1",
        "introduction_support": "<h3 style=\"margin: 0 0 10px;\">Get Free Premium Support</h3>\n\t\t\t\t\tWith all our products we provide free premium support. Get in touch with support via email: support@shapingrain.com",
        "faq": "",
        "introduction_global": "<h3 style=\"margin: 0 0 10px;\">General Settings</h3>\n\t\t\t\t\tSettings you make here affect the overall layout and design. They may also enable or disable site features globally.",
        "landing_page_menu": 1,
        "custom_logo": "",
        "custom_favicon": "",
        "blog_title": "Blog",
        "introduction_contact_block": "",
        "header_info_label": "",
        "introduction_email_phone": "Please enter either an email address or a phone number. Only one of these can be displayed.",
        "header_phone": "",
        "header_email": "",
        "introduction_custom_code": "",
        "custom_css": "",
        "custom_footer": "",
        "introduction_typography": "<h3 style=\"margin: 0 0 10px;\">Presets</h3>\n\t\t\t\t\tPresets contain font and color sections. Importing a preset is the fastest way of customzing JustLanded to your liking. You can use any preset as-is, or as a starting point for your own creations. Keep in mind though that whenever you import a preset, customized font and color selections in the current profile will be overwritten.",
        "preset_colors": null,
        "colors_section": null,
        "body_background": "",
        "menu_background_active": "#dd4631",
        "link_color": "#dd4531",
        "link_color_hover": "#bf321f",
        "blog_button_background": "#dd4631",
        "banner_gradient": {
            "start": "#cf5833",
            "end": "#ab2210"
        },
        "newsletter_background": "#dd4631",
        "pricing_highlight_background": "#dd4631",
        "pricing_highlight_hover_background": "#c03220",
        "fonts_section": null,
        "font_body": {
            "size": "12",
            "unit": "px",
            "face": "Arial",
            "style": "regular",
            "color": "#000000"
        },
        "font_logo": {
            "size": "12",
            "unit": "px",
            "face": "Lato",
            "style": "900",
            "color": "#dd4632",
            "subset": {
                "latin": 1
            }
        },
        "font_logo_tagline": {
            "size": "1.25",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#999999",
            "subset": {
                "latin": 1
            }
        },
        "font_quotes": {
            "size": "1",
            "unit": "em",
            "face": "Verdana*",
            "style": "italic",
            "color": "#333333"
        },
        "fonts_section_blog": null,
        "font_heading_banner": {
            "size": "3",
            "unit": "em",
            "face": "Merriweather",
            "style": "700",
            "color": "#ffffff"
        },
        "font_section_title": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#dd4632"
        },
        "font_section_subtitle": {
            "size": "1.6",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#999999"
        },
        "font_newsletter_title": {
            "size": "1.8",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_big_testimonial": {
            "size": "1.4",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_pricing_title": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_pricing_sub_title": {
            "size": "1.05",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#cccccc"
        },
        "font_pricing_sub_title_featured": "#cccccc",
        "font_pricing_price": {
            "size": "3.81",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_pricing_currency": {
            "size": "0.45",
            "unit": "em"
        },
        "font_heading_h1": {
            "size": "2.35",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_heading_h2": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_heading_h3": {
            "size": "1.6",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_heading_h4": {
            "size": "1.4",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_heading_h5": {
            "size": "1.2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_heading_h6": {
            "size": "1",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_page_title": {
            "size": "2.35",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_widget_title": {
            "size": "1.25",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_post_meta": {
            "size": "12",
            "unit": "px",
            "face": "Verdana*",
            "style": "regular",
            "color": "#999999"
        },
        "advanced_section": null,
        "extract_typography": null,
        "introduction_landing": "<h3 style=\"margin: 0 0 10px;\">The Landing Page</h3>\n\t\t\t\t\tThis panel contains the layout settings for the integrated landing page. This module allows you\n\t\t\t\t\tcreate a landing page using building blocks of pre-defined elements. Some of these\n\t\t\t\t\tblocks can also be added to any WordPress page through shortcodes.",
        "landingpage_blocks": {
            "disabled": {
                "placebo": "placebo",
                "block_page_content1": "Page Content 1",
                "block_page_content2": "Page Content 2",
                "block_page_content3": "Page Content 3",
                "block_page_content4": "Page Content 4",
                "block_widget1": "Widget 1",
                "block_widget2": "Widget 2"
            },
            "enabled": {
                "placebo": "placebo",
                "block_social_header": "Header Social Icons",
                "block_features": "List of Features",
                "block_gallery": "Gallery",
                "block_big_testimonial": "Feat. Testimonial",
                "block_small_testimonials": "Small Testimonials",
                "block_newsletter": "Newsletter Signup Form",
                "block_video": "Video Section",
                "block_pricing_table": "Pricing Table",
                "block_payment": "Payment Options",
                "block_social_side": "Sidebar Social Icons"
            }
        },
        "introduction_banner": "<h3 style=\"margin: 0 0 10px;\">Banner &amp; Slider</h3>\n\t\t\t\t\tThis panel contains settings for the banner, the most prominent part of your\n\t\t\t\t\tlanding page and the first item a visitor sees.",
        "banner_position": "right",
        "banner_title": "",
        "banner_text": "",
        "banner_bullets": "",
        "banner_layout_select": "Slider",
        "banner_image": "",
        "banner_slider": "",
        "banner_video": "",
        "introduction_buttons": "<h3 style=\"margin: 0 0 10px;\">Action Buttons</h3>\n\t\t\t\t\tThis set of buttons (or the first button only, depending on your selection) are used twice, as part of the header/banner, and optionally within a separate block\n\t\t\t\t\tintended to lead your prospects to a buying action. The latter is recommended for use at the bottom of the landing page.",
        "action_buttons_layout": "Two Buttons/Split-Button",
        "action_button1_text": "Buy for $10",
        "action_button1_link": "#",
        "action_button1_target": "Current Window",
        "action_button2_text": "Try our demo",
        "action_button2_link": "#",
        "action_button2_target": "Current Window",
        "introduction_social": "<h3 style=\"margin: 0 0 10px;\">Social Icons</h3>\n\t\t\t\t\tIn this section you can choose which social icons to show, and in what order. While it is a good idea to provide your visitors\n\t\t\t\t\twith a variety of options to contact and connect with you, be aware that less is often more. Display the most important links\n\t\t\t\t\trelevant to your site and leave out the rest.",
        "social_blocks_header": {
            "disabled": {
                "placebo": "placebo",
                "stumbleupon": "StumbleUpon",
                "youtube": "YouTube",
                "vimeo": "Vimeo",
                "linkedin": "LinkedIn",
                "pinterest": "Pinterest",
                "digg": "Digg",
                "myspace": "MySpace",
                "picasa": "Picasa",
                "flickr": "flickr",
                "dribbble": "Dribbble",
                "blogger": "Blogger"
            },
            "enabled": {
                "placebo": "placebo",
                "twitter": "Twitter",
                "facebook": "Facebook",
                "rss": "RSS Feed",
                "feedback": "Feedback Form"
            }
        },
        "social_blocks_sidebar": {
            "disabled": {
                "placebo": "placebo",
                "stumbleupon": "StumbleUpon",
                "youtube": "YouTube",
                "vimeo": "Vimeo",
                "linkedin": "LinkedIn",
                "pinterest": "Pinterest",
                "digg": "Digg",
                "myspace": "MySpace",
                "picasa": "Picasa",
                "flickr": "flickr",
                "dribbble": "Dribbble",
                "blogger": "Blogger"
            },
            "enabled": {
                "placebo": "placebo",
                "twitter": "Twitter",
                "facebook": "Facebook",
                "rss": "RSS Feed",
                "feedback": "Feedback Form"
            }
        },
        "social_twitter": "#",
        "social_facebook": "#",
        "social_stumbleupon": "#",
        "social_youtube": "#",
        "social_vimeo": "#",
        "social_linkedin": "#",
        "social_pinterest": "#",
        "social_digg": "#",
        "social_myspace": "#",
        "social_picasa": "#",
        "social_flickr": "#",
        "social_dribbble": "#",
        "social_blogger": "#",
        "social_rss": "#",
        "social_feedback": "#",
        "introduction_features": "<h3 style=\"margin: 0 0 10px;\">List of Features</h3>\n\t\t\t\t\tThis is list of product features meant to highlight what your product is all about. It works well when used used just underneath the banner.",
        "features_headline": "",
        "features_sub_headline": "",
        "features": "",
        "introduction_gallery": "<h3 style=\"margin: 0 0 10px;\">Gallery</h3>\n\t\t\t\t\tThis gallery can be used for product shots/screenshots. The built-in gallery comes with a leightweight\n\t\t\t\t\tand elegant lightbox to display larger versions of the uploaded images.",
        "gallery_headline": "",
        "gallery_sub_headline": "",
        "gallery": "",
        "introduction_testimonials_intro": "<h3 style=\"margin: 0 0 10px;\">Testimonials</h3>\n\t\t\t\t\tTestimonials accentuate authenticity. Use these quotations wisely to add credibility to your product.",
        "introduction_testimonials_big": "<strong>The Big Testimonial Section</strong> contains one testimonial. Use this to highlight one particular testimonial.",
        "testimonial_quote": "",
        "testimonial_name": "",
        "testimonial_title": "",
        "introduction_testimonials_small": "<strong>The Small Testimonials Section</strong> contains three small testimonials in a row.",
        "testimonials_headline": "",
        "testimonials_sub_headline": "",
        "testimonials": "",
        "introduction_newsletter": "<h3 style=\"margin: 0 0 10px;\">Newsletter Integration</h3>\n\t\t\t\t\tThe built-in newsletter sign-up form requires a third-party mailing list service in order to work. We support the two major providers <a href=\"http://www.aweber.com/\" target=\"_blank\">AWeber</a> and <a href=\"http://www.mailchimp.com\" target=\"_blank\">Mailchimp</a>.\n\t\t\t\t\tHowever, it is possible to use just about any service with a few changes and some technical knowledge. Please <a href='mailto:support@shapingrain.com'>contact support</a> if you require assistance.",
        "newsletter_headline_1": "Join our newsletter for exclusive deals",
        "newsletter_button": "Subscribe",
        "newsletter_placeholder": "Your email address",
        "newsletter_select": "aweber",
        "newsletter_group_aweber": 0,
        "newsletter_aweber_url": "http://www.aweber.com/scripts/addlead.pl",
        "newsletter_aweber_meta_web_form_id": "",
        "newsletter_aweber_meta_split_id": "",
        "newsletter_aweber_listname": "",
        "newsletter_aweber_redirect": "",
        "newsletter_aweber_meta_adtracking": "My_Web_Form",
        "newsletter_aweber_meta_message": "1",
        "newsletter_group_mailchimp": 0,
        "newsletter_mailchimp_url": "http://sushisepeti.us6.list-manage.com/subscribe/post",
        "newsletter_mailchimp_u": "",
        "newsletter_mailchimp_id": "",
        "newsletter_group_custom": 0,
        "newsletter_custom": "",
        "introduction_pricing": "<h3 style=\"margin: 0 0 10px;\">Payment Options</h3>\n\t\t\t\t\tThis is usually the last block of content. If your customer has not clicked the buy button yet, this is the last opportunity to convince him.\n\t\t\t\t\tBuying this product is easy - make sure your customers knows this.",
        "pricing_headline": "",
        "pricing_sub_headline": "",
        "pricing_button_text": "Buy now",
        "pricing_currency": "$",
        "pricing_packages": "",
        "payment_headline": "Come on, it's time to buy our product...",
        "payment_sub_headline": "This is your final chance to convince a customer",
        "payment_methods": {
            "visa": true,
            "master": true,
            "paypal": true
        },
        "introduction_page_content": "<h3 style=\"margin: 0 0 10px;\">Page Content</h3>\n\t\t\t\t\tThis is the easiest way to add freeform content to your landing page. Simply create a regular WordPress page,\n\t\t\t\t\tadd your content and set the page to retrieve the content from here. Make sure that the Page Content Blocks\n\t\t\t\t\tare enabled as well, otherwise they will not be displayed.",
        "page_content_1_section": null,
        "page_content_1_layout": "fullwidth",
        "page_content_1_showtitle": 0,
        "page_content_1_source1": "",
        "page_content_1_source2": "",
        "page_content_2_section": null,
        "page_content_2_layout": "fullwidth",
        "page_content_2_showtitle": 0,
        "page_content_2_source1": "",
        "page_content_2_source2": "",
        "page_content_3_section": null,
        "page_content_3_layout": "fullwidth",
        "page_content_3_showtitle": 0,
        "page_content_3_source1": "",
        "page_content_3_source2": "",
        "page_content_4_section": null,
        "page_content_4_layout": "fullwidth",
        "page_content_4_showtitle": 0,
        "page_content_4_source1": "",
        "page_content_4_source2": ""
    },
    "8": {
        "introduction_home": "<h3 style=\"margin: 0 0 10px;\">Welcome to JustLanded - a landing page that simply works.</h3>\n\t\t\t\t\tWe've done everything to make this options panel as painless and easy to use as possible. However, if there is anything you need help with, please just let us know: <a href=\"mailto:info@shapingrain.com\">info@shapingrain.com</a>. We are also grateful for any bug reports and feature requests.",
        "news": "",
        "of_backup": "",
        "of_demo": "",
        "of_transfer": "",
        "site_default_profile": "1",
        "introduction_support": "<h3 style=\"margin: 0 0 10px;\">Get Free Premium Support</h3>\n\t\t\t\t\tWith all our products we provide free premium support. Get in touch with support via email: support@shapingrain.com",
        "faq": "",
        "introduction_global": "<h3 style=\"margin: 0 0 10px;\">General Settings</h3>\n\t\t\t\t\tSettings you make here affect the overall layout and design. They may also enable or disable site features globally.",
        "landing_page_menu": 1,
        "custom_logo": "",
        "custom_favicon": "",
        "blog_title": "Blog",
        "introduction_contact_block": "",
        "header_info_label": "",
        "introduction_email_phone": "Please enter either an email address or a phone number. Only one of these can be displayed.",
        "header_phone": "",
        "header_email": "",
        "introduction_custom_code": "",
        "custom_css": "",
        "custom_footer": "",
        "introduction_typography": "<h3 style=\"margin: 0 0 10px;\">Presets</h3>\n\t\t\t\t\tPresets contain font and color sections. Importing a preset is the fastest way of customzing JustLanded to your liking. You can use any preset as-is, or as a starting point for your own creations. Keep in mind though that whenever you import a preset, customized font and color selections in the current profile will be overwritten.",
        "preset_colors": null,
        "colors_section": null,
        "body_background": "",
        "menu_background_active": "#dd4631",
        "link_color": "#dd4531",
        "link_color_hover": "#bf321f",
        "blog_button_background": "#dd4631",
        "banner_gradient": {
            "start": "#cf5833",
            "end": "#ab2210"
        },
        "newsletter_background": "#dd4631",
        "pricing_highlight_background": "#dd4631",
        "pricing_highlight_hover_background": "#c03220",
        "fonts_section": null,
        "font_body": {
            "size": "12",
            "unit": "px",
            "face": "Arial",
            "style": "regular",
            "color": "#000000"
        },
        "font_logo": {
            "size": "12",
            "unit": "px",
            "face": "Lato",
            "style": "900",
            "color": "#dd4632",
            "subset": {
                "latin": 1
            }
        },
        "font_logo_tagline": {
            "size": "1.25",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#999999",
            "subset": {
                "latin": 1
            }
        },
        "font_quotes": {
            "size": "1",
            "unit": "em",
            "face": "Verdana*",
            "style": "italic",
            "color": "#333333"
        },
        "fonts_section_blog": null,
        "font_heading_banner": {
            "size": "3",
            "unit": "em",
            "face": "Merriweather",
            "style": "700",
            "color": "#ffffff"
        },
        "font_section_title": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#dd4632"
        },
        "font_section_subtitle": {
            "size": "1.6",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#999999"
        },
        "font_newsletter_title": {
            "size": "1.8",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_big_testimonial": {
            "size": "1.4",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_pricing_title": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_pricing_sub_title": {
            "size": "1.05",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#cccccc"
        },
        "font_pricing_sub_title_featured": "#cccccc",
        "font_pricing_price": {
            "size": "3.81",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_pricing_currency": {
            "size": "0.45",
            "unit": "em"
        },
        "font_heading_h1": {
            "size": "2.35",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_heading_h2": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_heading_h3": {
            "size": "1.6",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_heading_h4": {
            "size": "1.4",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_heading_h5": {
            "size": "1.2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_heading_h6": {
            "size": "1",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_page_title": {
            "size": "2.35",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_widget_title": {
            "size": "1.25",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_post_meta": {
            "size": "12",
            "unit": "px",
            "face": "Verdana*",
            "style": "regular",
            "color": "#999999"
        },
        "advanced_section": null,
        "extract_typography": null,
        "introduction_landing": "<h3 style=\"margin: 0 0 10px;\">The Landing Page</h3>\n\t\t\t\t\tThis panel contains the layout settings for the integrated landing page. This module allows you\n\t\t\t\t\tcreate a landing page using building blocks of pre-defined elements. Some of these\n\t\t\t\t\tblocks can also be added to any WordPress page through shortcodes.",
        "landingpage_blocks": {
            "disabled": {
                "placebo": "placebo",
                "block_page_content1": "Page Content 1",
                "block_page_content2": "Page Content 2",
                "block_page_content3": "Page Content 3",
                "block_page_content4": "Page Content 4",
                "block_widget1": "Widget 1",
                "block_widget2": "Widget 2"
            },
            "enabled": {
                "placebo": "placebo",
                "block_social_header": "Header Social Icons",
                "block_features": "List of Features",
                "block_gallery": "Gallery",
                "block_big_testimonial": "Feat. Testimonial",
                "block_small_testimonials": "Small Testimonials",
                "block_newsletter": "Newsletter Signup Form",
                "block_video": "Video Section",
                "block_pricing_table": "Pricing Table",
                "block_payment": "Payment Options",
                "block_social_side": "Sidebar Social Icons"
            }
        },
        "introduction_banner": "<h3 style=\"margin: 0 0 10px;\">Banner &amp; Slider</h3>\n\t\t\t\t\tThis panel contains settings for the banner, the most prominent part of your\n\t\t\t\t\tlanding page and the first item a visitor sees.",
        "banner_position": "right",
        "banner_title": "",
        "banner_text": "",
        "banner_bullets": "",
        "banner_layout_select": "Slider",
        "banner_image": "",
        "banner_slider": "",
        "banner_video": "",
        "introduction_buttons": "<h3 style=\"margin: 0 0 10px;\">Action Buttons</h3>\n\t\t\t\t\tThis set of buttons (or the first button only, depending on your selection) are used twice, as part of the header/banner, and optionally within a separate block\n\t\t\t\t\tintended to lead your prospects to a buying action. The latter is recommended for use at the bottom of the landing page.",
        "action_buttons_layout": "Two Buttons/Split-Button",
        "action_button1_text": "Buy for $10",
        "action_button1_link": "#",
        "action_button1_target": "Current Window",
        "action_button2_text": "Try our demo",
        "action_button2_link": "#",
        "action_button2_target": "Current Window",
        "introduction_social": "<h3 style=\"margin: 0 0 10px;\">Social Icons</h3>\n\t\t\t\t\tIn this section you can choose which social icons to show, and in what order. While it is a good idea to provide your visitors\n\t\t\t\t\twith a variety of options to contact and connect with you, be aware that less is often more. Display the most important links\n\t\t\t\t\trelevant to your site and leave out the rest.",
        "social_blocks_header": {
            "disabled": {
                "placebo": "placebo",
                "stumbleupon": "StumbleUpon",
                "youtube": "YouTube",
                "vimeo": "Vimeo",
                "linkedin": "LinkedIn",
                "pinterest": "Pinterest",
                "digg": "Digg",
                "myspace": "MySpace",
                "picasa": "Picasa",
                "flickr": "flickr",
                "dribbble": "Dribbble",
                "blogger": "Blogger"
            },
            "enabled": {
                "placebo": "placebo",
                "twitter": "Twitter",
                "facebook": "Facebook",
                "rss": "RSS Feed",
                "feedback": "Feedback Form"
            }
        },
        "social_blocks_sidebar": {
            "disabled": {
                "placebo": "placebo",
                "stumbleupon": "StumbleUpon",
                "youtube": "YouTube",
                "vimeo": "Vimeo",
                "linkedin": "LinkedIn",
                "pinterest": "Pinterest",
                "digg": "Digg",
                "myspace": "MySpace",
                "picasa": "Picasa",
                "flickr": "flickr",
                "dribbble": "Dribbble",
                "blogger": "Blogger"
            },
            "enabled": {
                "placebo": "placebo",
                "twitter": "Twitter",
                "facebook": "Facebook",
                "rss": "RSS Feed",
                "feedback": "Feedback Form"
            }
        },
        "social_twitter": "#",
        "social_facebook": "#",
        "social_stumbleupon": "#",
        "social_youtube": "#",
        "social_vimeo": "#",
        "social_linkedin": "#",
        "social_pinterest": "#",
        "social_digg": "#",
        "social_myspace": "#",
        "social_picasa": "#",
        "social_flickr": "#",
        "social_dribbble": "#",
        "social_blogger": "#",
        "social_rss": "#",
        "social_feedback": "#",
        "introduction_features": "<h3 style=\"margin: 0 0 10px;\">List of Features</h3>\n\t\t\t\t\tThis is list of product features meant to highlight what your product is all about. It works well when used used just underneath the banner.",
        "features_headline": "",
        "features_sub_headline": "",
        "features": "",
        "introduction_gallery": "<h3 style=\"margin: 0 0 10px;\">Gallery</h3>\n\t\t\t\t\tThis gallery can be used for product shots/screenshots. The built-in gallery comes with a leightweight\n\t\t\t\t\tand elegant lightbox to display larger versions of the uploaded images.",
        "gallery_headline": "",
        "gallery_sub_headline": "",
        "gallery": "",
        "introduction_testimonials_intro": "<h3 style=\"margin: 0 0 10px;\">Testimonials</h3>\n\t\t\t\t\tTestimonials accentuate authenticity. Use these quotations wisely to add credibility to your product.",
        "introduction_testimonials_big": "<strong>The Big Testimonial Section</strong> contains one testimonial. Use this to highlight one particular testimonial.",
        "testimonial_quote": "",
        "testimonial_name": "",
        "testimonial_title": "",
        "introduction_testimonials_small": "<strong>The Small Testimonials Section</strong> contains three small testimonials in a row.",
        "testimonials_headline": "",
        "testimonials_sub_headline": "",
        "testimonials": "",
        "introduction_newsletter": "<h3 style=\"margin: 0 0 10px;\">Newsletter Integration</h3>\n\t\t\t\t\tThe built-in newsletter sign-up form requires a third-party mailing list service in order to work. We support the two major providers <a href=\"http://www.aweber.com/\" target=\"_blank\">AWeber</a> and <a href=\"http://www.mailchimp.com\" target=\"_blank\">Mailchimp</a>.\n\t\t\t\t\tHowever, it is possible to use just about any service with a few changes and some technical knowledge. Please <a href='mailto:support@shapingrain.com'>contact support</a> if you require assistance.",
        "newsletter_headline_1": "Join our newsletter for exclusive deals",
        "newsletter_button": "Subscribe",
        "newsletter_placeholder": "Your email address",
        "newsletter_select": "aweber",
        "newsletter_group_aweber": 0,
        "newsletter_aweber_url": "http://www.aweber.com/scripts/addlead.pl",
        "newsletter_aweber_meta_web_form_id": "",
        "newsletter_aweber_meta_split_id": "",
        "newsletter_aweber_listname": "",
        "newsletter_aweber_redirect": "",
        "newsletter_aweber_meta_adtracking": "My_Web_Form",
        "newsletter_aweber_meta_message": "1",
        "newsletter_group_mailchimp": 0,
        "newsletter_mailchimp_url": "http://sushisepeti.us6.list-manage.com/subscribe/post",
        "newsletter_mailchimp_u": "",
        "newsletter_mailchimp_id": "",
        "newsletter_group_custom": 0,
        "newsletter_custom": "",
        "introduction_pricing": "<h3 style=\"margin: 0 0 10px;\">Payment Options</h3>\n\t\t\t\t\tThis is usually the last block of content. If your customer has not clicked the buy button yet, this is the last opportunity to convince him.\n\t\t\t\t\tBuying this product is easy - make sure your customers knows this.",
        "pricing_headline": "",
        "pricing_sub_headline": "",
        "pricing_button_text": "Buy now",
        "pricing_currency": "$",
        "pricing_packages": "",
        "payment_headline": "Come on, it's time to buy our product...",
        "payment_sub_headline": "This is your final chance to convince a customer",
        "payment_methods": {
            "visa": true,
            "master": true,
            "paypal": true
        },
        "introduction_page_content": "<h3 style=\"margin: 0 0 10px;\">Page Content</h3>\n\t\t\t\t\tThis is the easiest way to add freeform content to your landing page. Simply create a regular WordPress page,\n\t\t\t\t\tadd your content and set the page to retrieve the content from here. Make sure that the Page Content Blocks\n\t\t\t\t\tare enabled as well, otherwise they will not be displayed.",
        "page_content_1_section": null,
        "page_content_1_layout": "fullwidth",
        "page_content_1_showtitle": 0,
        "page_content_1_source1": "",
        "page_content_1_source2": "",
        "page_content_2_section": null,
        "page_content_2_layout": "fullwidth",
        "page_content_2_showtitle": 0,
        "page_content_2_source1": "",
        "page_content_2_source2": "",
        "page_content_3_section": null,
        "page_content_3_layout": "fullwidth",
        "page_content_3_showtitle": 0,
        "page_content_3_source1": "",
        "page_content_3_source2": "",
        "page_content_4_section": null,
        "page_content_4_layout": "fullwidth",
        "page_content_4_showtitle": 0,
        "page_content_4_source1": "",
        "page_content_4_source2": ""
    },
    "9": {
        "introduction_home": "<h3 style=\"margin: 0 0 10px;\">Welcome to JustLanded - a landing page that simply works.</h3>\n\t\t\t\t\tWe've done everything to make this options panel as painless and easy to use as possible. However, if there is anything you need help with, please just let us know: <a href=\"mailto:info@shapingrain.com\">info@shapingrain.com</a>. We are also grateful for any bug reports and feature requests.",
        "news": "",
        "of_backup": "",
        "of_demo": "",
        "of_transfer": "",
        "site_default_profile": "1",
        "introduction_support": "<h3 style=\"margin: 0 0 10px;\">Get Free Premium Support</h3>\n\t\t\t\t\tWith all our products we provide free premium support. Get in touch with support via email: support@shapingrain.com",
        "faq": "",
        "introduction_global": "<h3 style=\"margin: 0 0 10px;\">General Settings</h3>\n\t\t\t\t\tSettings you make here affect the overall layout and design. They may also enable or disable site features globally.",
        "landing_page_menu": 1,
        "custom_logo": "",
        "custom_favicon": "",
        "blog_title": "Blog",
        "introduction_contact_block": "",
        "header_info_label": "",
        "introduction_email_phone": "Please enter either an email address or a phone number. Only one of these can be displayed.",
        "header_phone": "",
        "header_email": "",
        "introduction_custom_code": "",
        "custom_css": "",
        "custom_footer": "",
        "introduction_typography": "<h3 style=\"margin: 0 0 10px;\">Presets</h3>\n\t\t\t\t\tPresets contain font and color sections. Importing a preset is the fastest way of customzing JustLanded to your liking. You can use any preset as-is, or as a starting point for your own creations. Keep in mind though that whenever you import a preset, customized font and color selections in the current profile will be overwritten.",
        "preset_colors": null,
        "colors_section": null,
        "body_background": "",
        "menu_background_active": "#dd4631",
        "link_color": "#dd4531",
        "link_color_hover": "#bf321f",
        "blog_button_background": "#dd4631",
        "banner_gradient": {
            "start": "#cf5833",
            "end": "#ab2210"
        },
        "newsletter_background": "#dd4631",
        "pricing_highlight_background": "#dd4631",
        "pricing_highlight_hover_background": "#c03220",
        "fonts_section": null,
        "font_body": {
            "size": "12",
            "unit": "px",
            "face": "Arial",
            "style": "regular",
            "color": "#000000"
        },
        "font_logo": {
            "size": "12",
            "unit": "px",
            "face": "Lato",
            "style": "900",
            "color": "#dd4632",
            "subset": {
                "latin": 1
            }
        },
        "font_logo_tagline": {
            "size": "1.25",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#999999",
            "subset": {
                "latin": 1
            }
        },
        "font_quotes": {
            "size": "1",
            "unit": "em",
            "face": "Verdana*",
            "style": "italic",
            "color": "#333333"
        },
        "fonts_section_blog": null,
        "font_heading_banner": {
            "size": "3",
            "unit": "em",
            "face": "Merriweather",
            "style": "700",
            "color": "#ffffff"
        },
        "font_section_title": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#dd4632"
        },
        "font_section_subtitle": {
            "size": "1.6",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#999999"
        },
        "font_newsletter_title": {
            "size": "1.8",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_big_testimonial": {
            "size": "1.4",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_pricing_title": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#333333"
        },
        "font_pricing_sub_title": {
            "size": "1.05",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#cccccc"
        },
        "font_pricing_sub_title_featured": "#cccccc",
        "font_pricing_price": {
            "size": "3.81",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#ffffff"
        },
        "font_pricing_currency": {
            "size": "0.45",
            "unit": "em"
        },
        "font_heading_h1": {
            "size": "2.35",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_heading_h2": {
            "size": "2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_heading_h3": {
            "size": "1.6",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_heading_h4": {
            "size": "1.4",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_heading_h5": {
            "size": "1.2",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_heading_h6": {
            "size": "1",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_page_title": {
            "size": "2.35",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_widget_title": {
            "size": "1.25",
            "unit": "em",
            "face": "Merriweather",
            "style": "regular",
            "color": "#000000"
        },
        "font_post_meta": {
            "size": "12",
            "unit": "px",
            "face": "Verdana*",
            "style": "regular",
            "color": "#999999"
        },
        "advanced_section": null,
        "extract_typography": null,
        "introduction_landing": "<h3 style=\"margin: 0 0 10px;\">The Landing Page</h3>\n\t\t\t\t\tThis panel contains the layout settings for the integrated landing page. This module allows you\n\t\t\t\t\tcreate a landing page using building blocks of pre-defined elements. Some of these\n\t\t\t\t\tblocks can also be added to any WordPress page through shortcodes.",
        "landingpage_blocks": {
            "disabled": {
                "placebo": "placebo",
                "block_page_content1": "Page Content 1",
                "block_page_content2": "Page Content 2",
                "block_page_content3": "Page Content 3",
                "block_page_content4": "Page Content 4",
                "block_widget1": "Widget 1",
                "block_widget2": "Widget 2"
            },
            "enabled": {
                "placebo": "placebo",
                "block_social_header": "Header Social Icons",
                "block_features": "List of Features",
                "block_gallery": "Gallery",
                "block_big_testimonial": "Feat. Testimonial",
                "block_small_testimonials": "Small Testimonials",
                "block_newsletter": "Newsletter Signup Form",
                "block_video": "Video Section",
                "block_pricing_table": "Pricing Table",
                "block_payment": "Payment Options",
                "block_social_side": "Sidebar Social Icons"
            }
        },
        "introduction_banner": "<h3 style=\"margin: 0 0 10px;\">Banner &amp; Slider</h3>\n\t\t\t\t\tThis panel contains settings for the banner, the most prominent part of your\n\t\t\t\t\tlanding page and the first item a visitor sees.",
        "banner_position": "right",
        "banner_title": "",
        "banner_text": "",
        "banner_bullets": "",
        "banner_layout_select": "Slider",
        "banner_image": "",
        "banner_slider": "",
        "banner_video": "",
        "introduction_buttons": "<h3 style=\"margin: 0 0 10px;\">Action Buttons</h3>\n\t\t\t\t\tThis set of buttons (or the first button only, depending on your selection) are used twice, as part of the header/banner, and optionally within a separate block\n\t\t\t\t\tintended to lead your prospects to a buying action. The latter is recommended for use at the bottom of the landing page.",
        "action_buttons_layout": "Two Buttons/Split-Button",
        "action_button1_text": "Buy for $10",
        "action_button1_link": "#",
        "action_button1_target": "Current Window",
        "action_button2_text": "Try our demo",
        "action_button2_link": "#",
        "action_button2_target": "Current Window",
        "introduction_social": "<h3 style=\"margin: 0 0 10px;\">Social Icons</h3>\n\t\t\t\t\tIn this section you can choose which social icons to show, and in what order. While it is a good idea to provide your visitors\n\t\t\t\t\twith a variety of options to contact and connect with you, be aware that less is often more. Display the most important links\n\t\t\t\t\trelevant to your site and leave out the rest.",
        "social_blocks_header": {
            "disabled": {
                "placebo": "placebo",
                "stumbleupon": "StumbleUpon",
                "youtube": "YouTube",
                "vimeo": "Vimeo",
                "linkedin": "LinkedIn",
                "pinterest": "Pinterest",
                "digg": "Digg",
                "myspace": "MySpace",
                "picasa": "Picasa",
                "flickr": "flickr",
                "dribbble": "Dribbble",
                "blogger": "Blogger"
            },
            "enabled": {
                "placebo": "placebo",
                "twitter": "Twitter",
                "facebook": "Facebook",
                "rss": "RSS Feed",
                "feedback": "Feedback Form"
            }
        },
        "social_blocks_sidebar": {
            "disabled": {
                "placebo": "placebo",
                "stumbleupon": "StumbleUpon",
                "youtube": "YouTube",
                "vimeo": "Vimeo",
                "linkedin": "LinkedIn",
                "pinterest": "Pinterest",
                "digg": "Digg",
                "myspace": "MySpace",
                "picasa": "Picasa",
                "flickr": "flickr",
                "dribbble": "Dribbble",
                "blogger": "Blogger"
            },
            "enabled": {
                "placebo": "placebo",
                "twitter": "Twitter",
                "facebook": "Facebook",
                "rss": "RSS Feed",
                "feedback": "Feedback Form"
            }
        },
        "social_twitter": "#",
        "social_facebook": "#",
        "social_stumbleupon": "#",
        "social_youtube": "#",
        "social_vimeo": "#",
        "social_linkedin": "#",
        "social_pinterest": "#",
        "social_digg": "#",
        "social_myspace": "#",
        "social_picasa": "#",
        "social_flickr": "#",
        "social_dribbble": "#",
        "social_blogger": "#",
        "social_rss": "#",
        "social_feedback": "#",
        "introduction_features": "<h3 style=\"margin: 0 0 10px;\">List of Features</h3>\n\t\t\t\t\tThis is list of product features meant to highlight what your product is all about. It works well when used used just underneath the banner.",
        "features_headline": "",
        "features_sub_headline": "",
        "features": "",
        "introduction_gallery": "<h3 style=\"margin: 0 0 10px;\">Gallery</h3>\n\t\t\t\t\tThis gallery can be used for product shots/screenshots. The built-in gallery comes with a leightweight\n\t\t\t\t\tand elegant lightbox to display larger versions of the uploaded images.",
        "gallery_headline": "",
        "gallery_sub_headline": "",
        "gallery": "",
        "introduction_testimonials_intro": "<h3 style=\"margin: 0 0 10px;\">Testimonials</h3>\n\t\t\t\t\tTestimonials accentuate authenticity. Use these quotations wisely to add credibility to your product.",
        "introduction_testimonials_big": "<strong>The Big Testimonial Section</strong> contains one testimonial. Use this to highlight one particular testimonial.",
        "testimonial_quote": "",
        "testimonial_name": "",
        "testimonial_title": "",
        "introduction_testimonials_small": "<strong>The Small Testimonials Section</strong> contains three small testimonials in a row.",
        "testimonials_headline": "",
        "testimonials_sub_headline": "",
        "testimonials": "",
        "introduction_newsletter": "<h3 style=\"margin: 0 0 10px;\">Newsletter Integration</h3>\n\t\t\t\t\tThe built-in newsletter sign-up form requires a third-party mailing list service in order to work. We support the two major providers <a href=\"http://www.aweber.com/\" target=\"_blank\">AWeber</a> and <a href=\"http://www.mailchimp.com\" target=\"_blank\">Mailchimp</a>.\n\t\t\t\t\tHowever, it is possible to use just about any service with a few changes and some technical knowledge. Please <a href='mailto:support@shapingrain.com'>contact support</a> if you require assistance.",
        "newsletter_headline_1": "Join our newsletter for exclusive deals",
        "newsletter_button": "Subscribe",
        "newsletter_placeholder": "Your email address",
        "newsletter_select": "aweber",
        "newsletter_group_aweber": 0,
        "newsletter_aweber_url": "http://www.aweber.com/scripts/addlead.pl",
        "newsletter_aweber_meta_web_form_id": "",
        "newsletter_aweber_meta_split_id": "",
        "newsletter_aweber_listname": "",
        "newsletter_aweber_redirect": "",
        "newsletter_aweber_meta_adtracking": "My_Web_Form",
        "newsletter_aweber_meta_message": "1",
        "newsletter_group_mailchimp": 0,
        "newsletter_mailchimp_url": "http://sushisepeti.us6.list-manage.com/subscribe/post",
        "newsletter_mailchimp_u": "",
        "newsletter_mailchimp_id": "",
        "newsletter_group_custom": 0,
        "newsletter_custom": "",
        "introduction_pricing": "<h3 style=\"margin: 0 0 10px;\">Payment Options</h3>\n\t\t\t\t\tThis is usually the last block of content. If your customer has not clicked the buy button yet, this is the last opportunity to convince him.\n\t\t\t\t\tBuying this product is easy - make sure your customers knows this.",
        "pricing_headline": "",
        "pricing_sub_headline": "",
        "pricing_button_text": "Buy now",
        "pricing_currency": "$",
        "pricing_packages": "",
        "payment_headline": "Come on, it's time to buy our product...",
        "payment_sub_headline": "This is your final chance to convince a customer",
        "payment_methods": {
            "visa": true,
            "master": true,
            "paypal": true
        },
        "introduction_page_content": "<h3 style=\"margin: 0 0 10px;\">Page Content</h3>\n\t\t\t\t\tThis is the easiest way to add freeform content to your landing page. Simply create a regular WordPress page,\n\t\t\t\t\tadd your content and set the page to retrieve the content from here. Make sure that the Page Content Blocks\n\t\t\t\t\tare enabled as well, otherwise they will not be displayed.",
        "page_content_1_section": null,
        "page_content_1_layout": "fullwidth",
        "page_content_1_showtitle": 0,
        "page_content_1_source1": "",
        "page_content_1_source2": "",
        "page_content_2_section": null,
        "page_content_2_layout": "fullwidth",
        "page_content_2_showtitle": 0,
        "page_content_2_source1": "",
        "page_content_2_source2": "",
        "page_content_3_section": null,
        "page_content_3_layout": "fullwidth",
        "page_content_3_showtitle": 0,
        "page_content_3_source1": "",
        "page_content_3_source2": "",
        "page_content_4_section": null,
        "page_content_4_layout": "fullwidth",
        "page_content_4_showtitle": 0,
        "page_content_4_source1": "",
        "page_content_4_source2": ""
    }
}