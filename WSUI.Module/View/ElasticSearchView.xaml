<UserControl x:Class="OF.Module.View.ElasticSearchView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:enums="clr-namespace:OF.Core.Enums;assembly=OF.Core"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:service="clr-namespace:OF.Module.Service"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Service/ResourceTemplate.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            
            <service:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"></service:BoolToVisibilityConverter>
            <service:BoolToVisibilityConverter x:Key="InvertBoolToVisibilityConverter" IsInvert="True"></service:BoolToVisibilityConverter>
            

            <Style TargetType="TextBlock">
                <Setter Property="Margin" Value="5"></Setter>
                <Setter Property="FontSize" Value="16"></Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="1" Orientation="Vertical">
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsServiceInstalled,UpdateSourceTrigger=PropertyChanged}" Value="False">
                            <Setter Property="Visibility"  Value="Visible"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <TextBlock>Service haven't been installed</TextBlock>

            <Button Command="{Binding InstallServiceCommand}" Margin="5">Install ElasticSearch Service</Button>
        </StackPanel>

        <StackPanel Grid.Row="2" Orientation="Vertical">
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsServiceInstalled,UpdateSourceTrigger=PropertyChanged}" Value="True"></Condition>
                                <Condition Binding="{Binding IsServiceRunning,UpdateSourceTrigger=PropertyChanged}" Value="False"></Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible"></Setter>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>

            <TextBlock>Service isn't running</TextBlock>

            <Button Command="{Binding RunServiceCommand}" Margin="5">Run ElasticSearch Service</Button>
        </StackPanel>

        <StackPanel Grid.Row="3" Orientation="Vertical" >
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsServiceInstalled,UpdateSourceTrigger=PropertyChanged}" Value="True"></Condition>
                                <Condition Binding="{Binding IsServiceRunning,UpdateSourceTrigger=PropertyChanged}" Value="True"></Condition>
                                <Condition Binding="{Binding IsIndexExisted,UpdateSourceTrigger=PropertyChanged}" Value="False"></Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible"></Setter>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>

            <TextBlock TextWrapping="Wrap">
                <Run FontWeight="Bold">OutlookFinder</Run> 
                <Run> needs to do a one-time initial index of your email.</Run>
            </TextBlock>
            
            <Button Command="{Binding CreateIndexCommand}" Margin="5" Visibility="{Binding CreateIndexVisibility,UpdateSourceTrigger=PropertyChanged}"
                    Width="175">Run indexing process</Button>

            <StackPanel Orientation="Vertical" Margin="0 5 0 5" Visibility="{Binding ShowProgress,UpdateSourceTrigger=PropertyChanged}">
                <controls:MetroProgressBar 
                    Maximum="100" 
                    Value="{Binding CurrentProgress, UpdateSourceTrigger=PropertyChanged}"></controls:MetroProgressBar>
                <TextBlock FontSize="12" Foreground="ForestGreen" Visibility="{Binding IsBusy,Mode=OneWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BoolToVisibilityConverter}}">Indexing Folders.</TextBlock>
                <StackPanel Orientation="Vertical" Visibility="{Binding IsBusy,Mode=OneWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource InvertBoolToVisibilityConverter}}">
                    <TextBlock FontSize="12" Foreground="OrangeRed" TextWrapping="Wrap">Indexing paused due to user activity. Do you want to force indexing?</TextBlock>
                    <Button Command="{Binding ForceCommand}" Width="75">Force</Button>
                </StackPanel>
                
                <StackPanel Orientation="Horizontal">
                    
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <StackPanel  Orientation="Horizontal" Grid.Row="0">
                            <TextBlock FontSize="12">Folder:</TextBlock>
                            <TextBlock FontSize="12" Text="{Binding CurrentFolder,UpdateSourceTrigger=PropertyChanged}"></TextBlock>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Grid.Row="1">
                            <TextBlock FontSize="12">Emails/Attachments get indexed:</TextBlock>
                            <TextBlock FontSize="12" Text="{Binding CountEmailsAttachments,UpdateSourceTrigger=PropertyChanged}"></TextBlock>
                        </StackPanel>
                    </Grid>
                </StackPanel>
            </StackPanel>
            
        </StackPanel>

        <StackPanel Grid.Row="4" Orientation="Vertical" Visibility="{Binding FinishedStepVisibility,UpdateSourceTrigger=PropertyChanged}">
            
            <TextBlock FontSize="20" FontWeight="Bold">Ready to Rock!</TextBlock>
            <TextBlock TextWrapping="Wrap" FontSize="14" >OutlookFinder has finished examining your recent emails. The rest will be indexed later.</TextBlock>
            <Button Command="{Binding LetsGoCommand}" Width="75">Let's Go!</Button>
            
        </StackPanel>
        
    </Grid>
</UserControl>