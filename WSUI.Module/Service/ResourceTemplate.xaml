<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:behaviors="clr-namespace:WSUI.Infrastructure.Behaviors;assembly=WSUI.Infrastructure" xmlns:converters="clr-namespace:WSUI.Infrastructure.Converters;assembly=WSUI.Infrastructure" xmlns:ctrl="clr-namespace:WSUI.Infrastructure.Controls;assembly=WSUI.Infrastructure" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:listBox="clr-namespace:WSUI.Infrastructure.Controls.ListBox;assembly=WSUI.Infrastructure" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:service="clr-namespace:WSUI.Module.Service">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <service:DateToStringConverter x:Key="dateConverter" />
    <service:CountToFormatStringConvert x:Key="countConverter" />
    <service:NameToImageConvert x:Key="nameConverter" />
    <service:SizebytesToStringConverter x:Key="sizeConverter" />
    <service:ObjectToNameConverter x:Key="objectConverter" />
    <service:ActualWidthToWidthConverter x:Key="ActualWidthConverter" />
    <converters:StringToStringConverter x:Key="StringConverter" />
    <service:IntToVisibilityConverter x:Key="IntToVisibilityConverter"></service:IntToVisibilityConverter>
    <service:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"></service:BoolToVisibilityConverter>

    <Style TargetType="ToolTip">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
                    <mwt:SystemDropShadowChrome Color="#00FFFFFF" CornerRadius="2,2,2,2" Name="Shdw" SnapsToDevicePixels="True">
                        <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" CornerRadius="2,2,2,2" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}">
                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </mwt:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToolTipService.HasDropShadow">
                            <Setter TargetName="Shdw" Property="FrameworkElement.Margin">
                                <Setter.Value>
                                    <Thickness>0,0,5,5</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Shdw" Property="mwt:SystemDropShadowChrome.Color">
                                <Setter.Value>
                                    <Color>#71000000</Color>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="WSUIChromelessButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource TransparentWhiteBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True"
                                          />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ImageStyle" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Margin" Value="2" />
    </Style>

    <Style x:Key="ImageStyleEmail" TargetType="{x:Type Image}" BasedOn="{StaticResource ImageStyle}">
        <Setter Property="Source" Value="..\Images\mail.png"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding HasAttachments}" Value="True">
                <Setter Property="Source" Value="..\Images\mail_attachment.png"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ExpanderImageStyle" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="12" />
        <Setter Property="Height" Value="12" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Visibility" Value="Visible"></Setter>
    </Style>

    <Style x:Key="NameStyleWidthColumn" TargetType="ColumnDefinition">
        <Setter Property="Width" Value="150" />
        <Setter Property="MinWidth" Value="100" />
    </Style>

    <Style x:Key="CountStyleWidthColumn" TargetType="ColumnDefinition">
        <Setter Property="Width" Value="Auto" />
    </Style>

    <Style x:Key="SubjectStyleWidthColumn" TargetType="ColumnDefinition">
        <Setter Property="Width" Value="300" />
    </Style>

    <Style x:Key="FromStyleWidthColumn" TargetType="ColumnDefinition">
        <Setter Property="Width" Value="Auto" />
    </Style>

    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Visibility" Value="Visible"></Setter>
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="16" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Image Style="{StaticResource ExpanderImageStyle}" x:Name="ExpanderImage" Source="..\Images\plus.png" />
                            </Grid>
                            <ContentPresenter Grid.Column="1" Margin="0,0,0,0" HorizontalAlignment="Left" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Source" TargetName="ExpanderImage" Value="..\Images\plus.png"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Source" TargetName="ExpanderImage" Value="..\Images\minus.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Count}" Value="0">
                <Setter Property="Visibility" Value="Hidden"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ListBoxExpanderStyle" TargetType="{x:Type ListBox}"  BasedOn="{StaticResource SimpleListBoxStyle}">
        <!---->
        <Setter Property="Margin" Value="15 0 0 0"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EmailExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" SnapsToDevicePixels="true">
                        <DockPanel>
                            <Grid DockPanel.Dock="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton Style="{StaticResource ExpanderUpHeaderStyle}" x:Name="HeaderSite" Grid.Column="0" Margin="0" Padding="{TemplateBinding Padding}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="0" MinWidth="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <Grid Grid.Column="1" HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Style="{StaticResource ResourceKey=CountStyleWidthColumn}" />
                                        <ColumnDefinition Width="0.25*" />
                                        <ColumnDefinition Width="0.75*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Grid.ToolTip>
                                        <StackPanel Orientation="Vertical">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Received: "></TextBlock>
                                                <TextBlock Text="{Binding Path=DateReceived,Converter={StaticResource dateConverter}}"></TextBlock>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Subject: "></TextBlock>
                                                <TextBlock Text="{Binding Path=ItemName}"></TextBlock>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Path=Size, Converter={StaticResource sizeConverter}}" />
                                            </StackPanel>
                                        </StackPanel>
                                    </Grid.ToolTip>

                                    <Image Style="{StaticResource ImageStyleEmail}" Grid.Column="0" Grid.Row="0" />

                                    <TextBlock Grid.Column="1" Grid.Row="0" Margin="0 2 0 1" FontWeight="Bold" Foreground="Red" Text="{Binding Count,Converter={StaticResource countConverter}}"></TextBlock>
                                    <ctrl:HightliteTextBlock Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="0" Margin="2 2 2 1" Hightlight="{Binding Path=DataContext.SearchString,Mode=OneTime,ElementName=this}" Text="{Binding Path=From}"></ctrl:HightliteTextBlock>
                                    <TextBlock Grid.Column="4" Grid.Row="0" Margin="1 2 1 1" Foreground="Black" Text="{Binding Path=DateReceived,Converter={StaticResource dateConverter}}" />

                                    <ctrl:HightliteTextBlock Grid.Column="1" Grid.ColumnSpan="4" Grid.Row="1" Margin="0 1 0 2" Hightlight="{Binding Path=DataContext.SearchString,Mode=OneTime,ElementName=this}" Text="{Binding Path=ItemName,Converter={StaticResource ResourceKey=StringConverter}}"></ctrl:HightliteTextBlock>
                                </Grid>
                            </Grid>
        <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Margin="0" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed" />
        </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="true">
                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
        </ControlTemplate>
        </Setter.Value>
        </Setter>
    </Style>

        <DataTemplate x:Key="NoneTemplate">
            <Grid Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBox}},Path=ActualWidth,Converter={StaticResource ActualWidthConverter}}" HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Image Style="{StaticResource ImageStyle}" Grid.Column="0" Source="..\Images\document-smiley-sad.png" />

                <TextBlock Grid.Column="1" Margin="5" TextWrapping="Wrap">
                    <Run>Search for "</Run>
                    <Run Text="{Binding Path=DataContext.SearchString,Mode=OneTime,ElementName=this}" FontWeight="Bold"></Run>
                    <Run>" returned no matches. Try different keywords.</Run>
                </TextBlock>
        </Grid>
        </DataTemplate>

        <DataTemplate x:Key="EmailItemTemplate">
            <Grid Margin="8 0 0 0" Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBox}},Path=ActualWidth,Converter={StaticResource ActualWidthConverter}}" HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Style="{StaticResource ResourceKey=CountStyleWidthColumn}" />
                    <ColumnDefinition Width="0.25*" />
                    <ColumnDefinition Width="0.75*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ToolTip>
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Received: "></TextBlock>
                            <TextBlock Text="{Binding Path=DateReceived,Converter={StaticResource dateConverter}}"></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Subject: "></TextBlock>
                            <TextBlock Text="{Binding Path=ItemName}"></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=Size, Converter={StaticResource sizeConverter}}" />
                        </StackPanel>
                    </StackPanel>
                </Grid.ToolTip>

                <Image Style="{StaticResource ImageStyleEmail}" Grid.Column="0" Grid.Row="0" />

                <TextBlock Grid.Column="1" Grid.Row="0" Margin="0 2 0 2" FontWeight="Bold" Foreground="Red" Text="{Binding Count,Converter={StaticResource countConverter}}"></TextBlock>
                <ctrl:HightliteTextBlock Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="0" Margin="2" Hightlight="{Binding Path=DataContext.SearchString,Mode=OneTime,ElementName=this}" Text="{Binding Path=From}"></ctrl:HightliteTextBlock>
                <TextBlock Grid.Column="4" Grid.Row="0" Margin="2 2 1 2" Foreground="Black" Text="{Binding Path=DateReceived,Converter={StaticResource dateConverter}}" />

                <ctrl:HightliteTextBlock Grid.Column="1" Grid.ColumnSpan="4" Grid.Row="1" Margin="0 1 0 2" Hightlight="{Binding Path=DataContext.SearchString,Mode=OneTime,ElementName=this}" Text="{Binding Path=ItemName,Converter={StaticResource ResourceKey=StringConverter}}"></ctrl:HightliteTextBlock>
                <i:Interaction.Behaviors>
                    <behaviors:GridListItemBehavior></behaviors:GridListItemBehavior>
                </i:Interaction.Behaviors>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="EmailTemplate">
            <Grid Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBox}},Path=ActualWidth,Converter={StaticResource ActualWidthConverter}}" HorizontalAlignment="Left"
              Margin="0 0 0 3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Expander Style="{StaticResource EmailExpanderStyle}" Grid.Column="0" Margin="0" ExpandDirection="Down">
                    <Grid>
                        <ListBox ItemsSource="{Binding Items}" ItemTemplate="{StaticResource EmailItemTemplate}" Style="{StaticResource ListBoxExpanderStyle}">

                            <i:Interaction.Behaviors>
                                <behaviors:ChildListBoxBehavior />
                            </i:Interaction.Behaviors>
                        </ListBox>
                    </Grid>
                    <i:Interaction.Behaviors>
                        <behaviors:ExpanderEmailBehavior></behaviors:ExpanderEmailBehavior>
                    </i:Interaction.Behaviors>
                </Expander>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="UserTemplate">
            <Grid Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBox}},Path=ActualWidth,Converter={StaticResource ActualWidthConverter}}" HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="16" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.ToolTip>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="{Binding Path=Tag}" />
                    </StackPanel>
                </Grid.ToolTip>
                <Image Style="{StaticResource ImageStyle}" Grid.Column="1" Source="..\Images\user.png" />
                <ctrl:HightliteHyperlink Grid.Column="2" Margin="5" Hightlight="{Binding Path=DataContext.SearchString,Mode=OneTime,ElementName=this}" Text="{Binding Converter={StaticResource objectConverter}}">
                    <ctrl:HightliteHyperlink.Style>
                        <Style TargetType="ctrl:HightliteTextBlockBase">
                            <Setter Property="ctrl:HightliteTextBlockBase.ForegroundColor" Value="Blue" />
                            <Style.Triggers>
                                <Trigger Property="Control.IsMouseOver" Value="True">
                                    <Setter Property="ctrl:HightliteTextBlockBase.ForegroundColor" Value="Red" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ctrl:HightliteHyperlink.Style>
                </ctrl:HightliteHyperlink>
                <i:Interaction.Behaviors>
                    <behaviors:GridListItemBehavior></behaviors:GridListItemBehavior>
                </i:Interaction.Behaviors>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="FileTemplate">
            <Grid Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBox}},Path=ActualWidth,Converter={StaticResource ActualWidthConverter}}" HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="16" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.ToolTip>
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Date created: "></TextBlock>
                            <TextBlock Text="{Binding Path=DateCreated,Converter={StaticResource dateConverter}}"></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Name: "></TextBlock>
                            <TextBlock Text="{Binding ItemName}"></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=Size, Converter={StaticResource sizeConverter}}" />    
                        </StackPanel>
                    </StackPanel>
                </Grid.ToolTip>
                <Image Style="{StaticResource ImageStyle}" Grid.Column="1" Source="{Binding Path=ItemName,Converter={StaticResource ResourceKey=nameConverter}}" />
                <TextBlock Grid.Column="2" Margin="2 5 2 5" FontWeight="Bold" Foreground="Red" Text="{Binding Count,Converter={StaticResource countConverter}}"
                           Visibility="{Binding Count, Converter={StaticResource IntToVisibilityConverter}}"></TextBlock>
                <ctrl:HightliteTextBlock Grid.Column="3" Grid.ColumnSpan="2" Margin="2 5 5 5" Hightlight="{Binding Path=DataContext.SearchString,Mode=OneTime,ElementName=this}" Text="{Binding Path=ItemName}" />

                <TextBlock Grid.Column="5" Margin="5" Foreground="Black" Text="{Binding Path=DateCreated,Converter={StaticResource dateConverter}}" />

                <i:Interaction.Behaviors>
                    <behaviors:GridListItemBehavior></behaviors:GridListItemBehavior>
                </i:Interaction.Behaviors>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="AttachmentTemplate">
            <Grid Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBox}},Path=ActualWidth,Converter={StaticResource ActualWidthConverter}}" HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="16" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.ToolTip>
                   <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Date received: "></TextBlock>
                            <TextBlock Text="{Binding Path=DateReceived,Converter={StaticResource dateConverter}}"></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Name: "></TextBlock>
                            <TextBlock Text="{Binding ItemName}"></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=Size, Converter={StaticResource sizeConverter}}" />    
                        </StackPanel>
                    </StackPanel>
                </Grid.ToolTip>

                <Image Style="{StaticResource ImageStyle}" Grid.Column="1" Source="{Binding Path=ItemUrl,Converter={StaticResource ResourceKey=nameConverter}}" />
                <TextBlock Grid.Column="2" Margin="2 5 2 5" FontWeight="Bold" Foreground="Red" Text="{Binding Count,Converter={StaticResource countConverter}}"
                           Visibility="{Binding Count, Converter={StaticResource IntToVisibilityConverter}}"></TextBlock>
                <ctrl:HightliteTextBlock Grid.Column="3" Grid.ColumnSpan="2" Margin="2 5 5 5" Hightlight="{Binding Path=DataContext.SearchString,Mode=OneTime,ElementName=this}" Text="{Binding Path=ItemName}" />
                <TextBlock Grid.Column="5" Margin="5" Foreground="Black" Text="{Binding Path=DateReceived,Converter={StaticResource dateConverter}}" />

                <i:Interaction.Behaviors>
                    <behaviors:GridListItemBehavior></behaviors:GridListItemBehavior>
                </i:Interaction.Behaviors>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="CalendarTemplate">

            <Grid Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBox}},Path=ActualWidth,Converter={StaticResource ActualWidthConverter}}" HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="16" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Style="{StaticResource ResourceKey=CountStyleWidthColumn}" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Image Style="{StaticResource ImageStyle}" Grid.Column="1" Source="..\Images\date.png" />
                <TextBlock Grid.Column="2" Margin="2 5 2 5" FontWeight="Bold" Foreground="Red" Text="{Binding Count,Converter={StaticResource countConverter}}"></TextBlock>
                <ctrl:HightliteTextBlock Grid.Column="3" Margin="5" Hightlight="{Binding Path=DataContext.SearchString,Mode=OneTime,ElementName=this}" Text="{Binding Path=ItemName}" />
                <TextBlock Grid.Column="4" Margin="5" Foreground="Black" Text="{Binding Path=DateModified,Converter={StaticResource dateConverter}}" />

                <i:Interaction.Behaviors>
                    <behaviors:GridListItemBehavior></behaviors:GridListItemBehavior>
                </i:Interaction.Behaviors>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="PictureTemplate">
            <Grid Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBox}},Path=ActualWidth,Converter={StaticResource ActualWidthConverter}}" HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="16" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Style="{StaticResource ResourceKey=CountStyleWidthColumn}" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.ToolTip>
                     <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Date created: "></TextBlock>
                            <TextBlock Text="{Binding Path=DateCreated,Converter={StaticResource dateConverter}}"></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Name: "></TextBlock>
                            <TextBlock Text="{Binding ItemName}"></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=Size, Converter={StaticResource sizeConverter}}" />    
                        </StackPanel>
                    </StackPanel>
                </Grid.ToolTip>
                <Image Style="{StaticResource ImageStyle}" Grid.Column="1" Source="..\Images\picture.png" />
                <TextBlock Grid.Column="2" Margin="2 5 2 5" FontWeight="Bold" Foreground="Red" Text="{Binding Count,Converter={StaticResource countConverter}}"></TextBlock>
                <ctrl:HightliteTextBlock Grid.Column="3" Margin="5" Hightlight="{Binding Path=DataContext.SearchString,Mode=OneTime,ElementName=this}" Text="{Binding Path=ItemName}" />
                <TextBlock Grid.Column="4" Margin="5" Foreground="Black" Text="{Binding Path=DateCreated,Converter={StaticResource dateConverter}}" />
                <i:Interaction.Behaviors>
                    <behaviors:GridListItemBehavior></behaviors:GridListItemBehavior>
                </i:Interaction.Behaviors>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="CommandTemplate">
            <DockPanel Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBox}},Path=ActualWidth,Converter={StaticResource ActualWidthConverter}}" HorizontalAlignment="Stretch" LastChildFill="True">
                <Image Style="{StaticResource ImageStyle}" DockPanel.Dock="Left" Grid.Column="0" Source="..\Images\more1.png" />
                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                    <ctrl:HightliteHyperlink Margin="5" Hightlight="{Binding Path=DataContext.SearchString,Mode=OneTime,ElementName=this}" Text="{Binding Path=ItemName}">
                        <ctrl:HightliteHyperlink.Style>
                            <Style TargetType="ctrl:HightliteTextBlockBase">
                                <Setter Property="ctrl:HightliteTextBlockBase.ForegroundColor" Value="Blue" />
                                <Style.Triggers>
                                    <Trigger Property="Control.IsMouseOver" Value="True">
                                        <Setter Property="ctrl:HightliteTextBlockBase.ForegroundColor" Value="Red" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ctrl:HightliteHyperlink.Style>
                    </ctrl:HightliteHyperlink>
                </StackPanel>
            </DockPanel>
        </DataTemplate>

        <service:AllFilesDataTemplateSelector x:Key="templateSelector" AttachmentTemplate="{StaticResource ResourceKey=AttachmentTemplate}" CalendarTemplate="{StaticResource ResourceKey=CalendarTemplate}" CommandTemplate="{StaticResource ResourceKey=CommandTemplate}" EmailTemplate="{StaticResource ResourceKey=EmailTemplate}" FileTemplate="{StaticResource ResourceKey=FileTemplate}" NoneTemplate="{StaticResource ResourceKey=NoneTemplate}" PictureTemplate="{StaticResource ResourceKey=PictureTemplate}" UserTemplate="{StaticResource ResourceKey=UserTemplate}" />

        <ContextMenu x:Key="contextMenu">
            <MenuItem Command="{Binding OpenCommand}" Header="Open file" />
            <MenuItem Command="{Binding OpenFolderCommand}" Header="Open folder" />
            <MenuItem Command="{Binding ShowPathCommand}" Header="Show filename"></MenuItem>
        </ContextMenu>

        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="#D5D5D5" />
            <Setter Property="Foreground" Value="#222222" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Padding" Value="10,5,10,5" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid Margin="0" Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="19" />
                                </Grid.ColumnDefinitions>
                                <Path x:Name="arrow" Grid.Column="1" Margin="4.292,8,6,1.545" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center" />
                                <Path x:Name="arrow_Copy" Grid.Column="1" Margin="4.292,1.586,6,7.959" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center" />
                                <ContentPresenter Grid.Column="0" Margin="0,0,0,0" HorizontalAlignment="Left" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                                <Setter Property="Data" TargetName="arrow_Copy" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="Border" Value="#222222" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#7f222222" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderStyleMetro" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
            <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <DockPanel Background="#F5F5F5">
                            <ToggleButton Style="{StaticResource ExpanderDownHeaderStyle}" x:Name="HeaderSite" DockPanel.Dock="Top" Margin="0" Padding="{TemplateBinding Padding}" Content="{TemplateBinding Header}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="0" MinWidth="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Margin="{TemplateBinding Padding}" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed" />
                        </DockPanel>
                        <!--ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"-->
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="true">
                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
        </ControlTemplate>
        </Setter.Value>
        </Setter>
    </Style>

    <Color x:Key="HighLightColorItem">#FFF4F4F4</Color>
    <Color x:Key="TextBoxText">#FF414141</Color>
    <Color x:Key="AccentDarkColor">#FF1c739d</Color>
    <Color x:Key="NormalForegroundColor">#FF000000</Color>

    <Style x:Key="ItemTextBlock" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Margin" Value="2 0 2 0"></Setter>
    </Style>

    <Style x:Key="WSUIMetroListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="Margin" Value="0 2 5 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid x:Name="Bd">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="SelectedUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ToolTip>
                            <ToolTip>
                                <TextBlock Text="{Binding Path=UIName}" ></TextBlock>
                            </ToolTip>
                        </Grid.ToolTip>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Viewbox>
                            <Grid>
                                <Grid Name="backgroundGrid" Width="24" Height="24" Visibility="Collapsed" />
                                <Path Name="IconPath" Data="{Binding Path=Data}" Stretch="Uniform" Fill="{StaticResource AccentColorBrush}" Width="24" Height="24" Margin="2" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <RotateTransform Angle="0" />
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource TextBoxText}"></SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource AccentColorBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource AccentSelectedColorBrush}" />
                            <Setter TargetName="IconPath" Property="Fill" Value="White"></Setter>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"></Condition>
                                <Condition Property="IsSelected" Value="False"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource HighLightColorItem}" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource GrayBrush5}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"></Condition>
                                <Condition Property="IsFocused" Value="True"></Condition>
                                <Condition Property="Selector.IsSelectionActive" Value="False"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource TextBoxText}"></SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource GrayBrush5}" />
                                <Setter Property="Foreground" Value="{StaticResource AccentSelectedColorBrush}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource AccentColor2}" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Color x:Key="HoverForegroundColor">#FFFFFFFF</Color>
    <SolidColorBrush x:Key="HighLightColorItemBrush" Color="{StaticResource HighLightColorItem}"></SolidColorBrush>
    <SolidColorBrush x:Key="AccentColor2Brush" Color="{StaticResource AccentColor2}"></SolidColorBrush>
    <SolidColorBrush x:Key="HoverForegroundColorBrush" Color="{StaticResource HoverForegroundColor}"></SolidColorBrush>
    <SolidColorBrush x:Key="AccentColorBrush" Color="{StaticResource AccentColor}" />
    <SolidColorBrush x:Key="AccentDarkColorBrush" Color="{StaticResource AccentDarkColor}" />

    <Style x:Key="WSUIButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="2 2 2 2"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource NormalForegroundColor}"></SolidColorBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Border.ToolTip>
                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="{TemplateBinding Content}" />
                            </StackPanel>
                        </Border.ToolTip>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"></Setter>
        <Style.Triggers>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter Property="Button.Background" Value="{StaticResource HighLightColorItemBrush}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True">
                <Setter Property="Button.Background" Value="{StaticResource AccentColor2Brush}" />
                <Setter Property="Button.Foreground" Value="{StaticResource HoverForegroundColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    
    
    
    
</ResourceDictionary>