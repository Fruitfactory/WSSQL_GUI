///////////////////////////////////////////////////////////
//  BaseSearchSystem.cs
//  Implementation of the Class BaseSearchSystem
//  Generated by Enterprise Architect
//  Created on:      28-Sep-2013 3:55:40 PM
//  Original author: Yariki
///////////////////////////////////////////////////////////


using System;
using System.Collections.Generic;
using System.Threading;
using WSUI.Core.Interfaces;
namespace WSUI.Core.Core.Search 
{
	public abstract class BaseSearchSystem : ISearchSystem 
    {

		private Thread _mainSearchThread;
		private IList<ISearch> _listRules;

		protected BaseSearchSystem()
        {

		}


		public void Init()
        {

		}

		public void Reset()
        {

		}

		/// 
		/// <param name="searchCriteris"></param>
		public void SetSearchCriteria(string searchCriteris)
        {

		}

		public void Search()
        {

		}

		public void Stop()
        {

		}

		public event Action<object> SearchStarted;

		public event Action<object> SearchFinished;

		public event Action<object> SearchStoped;

		public IList<ISystemSearchResult> GetResult()
        {

			return null;
		}

		protected virtual void RaiseSearchStarted()
        {

		}

		protected virtual void RaiseSearchFinished()
        {

		}

		protected virtual void RaiseSearchStopped()
        {

		}

		protected virtual void ProcessData()
        {

		}

		protected IList<ISearch> GetRules()
        {

			return _listRules;
		}

		protected virtual void DoSearch()
        {

		}

		protected virtual void DoStop()
        {

		}

	}//end BaseSearchSystem

}//end namespace Search