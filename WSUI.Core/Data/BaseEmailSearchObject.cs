///////////////////////////////////////////////////////////
//  BaseEmailSearchObject.cs
//  Implementation of the Class BaseEmailSearchObject
//  Generated by Enterprise Architect
//  Created on:      27-Sep-2013 1:33:39 AM
//  Original author: Yariki
///////////////////////////////////////////////////////////

using System;
using System.Globalization;
using WSUI.Core.Core.Attributes;
using WSUI.Core.Data.ElasticSearch;
using WSUI.Core.Extensions;
using WSUI.Core.Helpers;

namespace WSUI.Core.Data
{
    public class BaseEmailSearchObject : BaseSearchObject
    {
        #region [needs]

        private string _fromEmailName = string.Empty;

        #endregion [needs]

        [Field("System.Message.ConversationID", 7, false)]

        public string ConversationId
        {
            get { return Get(() => ConversationId); }
            set { Set(() => ConversationId,value);}
        }

        [Field("System.Message.ToAddress", 8, false)]
        public WSUIRecipient[] To
        {
            get { return Get(() => To); }
            set { Set(() => To, value);}
        }

        public WSUIRecipient[] Cc
        {
            get { return Get(() => Cc); }
            set { Set(() => Cc, value); }
        }

        public WSUIRecipient[] Bcc
        {
            get { return Get(() => Bcc); }
            set { Set(() => Bcc, value); }
        }

        [Field("System.Message.DateReceived", 9, false)]
        public DateTime DateReceived
        {
            get { return Get(() => DateReceived); }
            set { Set(() => DateReceived,value);}
        }

        [Field("System.Message.ConversationIndex", 10, false)]
        public string ConversationIndex
        {
            get { return Get(() => ConversationIndex); }
            set { Set(() => ConversationIndex,value);}
        }

        [Field("System.Message.FromAddress", 11, false)]
        public string FromAddress
        {
            get { return Get(() => FromAddress); }
            set { Set(() => FromAddress,value);}
        }

        [Field("System.Message.FromName", 12, false)]
        public string FromName
        {
            get { return Get(() => FromName); }
            set { Set(() => FromName,value);}
        }

        public WSUIAttachment[] Attachments
        {
            get { return Get(() => Attachments); }
            set { Set(() => Attachments, value); }
        }

        public string HasAttachments
        {
            get
            {
                return Get(() => HasAttachments);
            }
        }

        public string From
        {
            get
            {
                if (string.IsNullOrEmpty(_fromEmailName))
                {
                    _fromEmailName = GetEmailOrName(FromAddress, FromName);
                }
                return _fromEmailName;
            }
        }

        public BaseEmailSearchObject()
        {
        }

        private string GetEmailOrName(string address, string name)
        {
            
            return !string.IsNullOrEmpty(address) && IsEmail(address) ? address : name;
        }

        private bool IsEmail(string email)
        {
            return email.IsEmail();
        }

        protected string[] CheckValidType(object val)
        {
            if (val != null && val.GetType().IsArray)
            {
                return val as string[];
            }
            return new string[] { val as string };
        }
    }//end BaseEmailSearchObject
}//end namespace Data