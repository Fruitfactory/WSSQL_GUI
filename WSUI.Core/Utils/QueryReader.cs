///////////////////////////////////////////////////////////
//  QueryReader.cs
//  Implementation of the Class QueryReader
//  Generated by Enterprise Architect
//  Created on:      29-Sep-2013 9:24:58 PM
//  Original author: Yariki
///////////////////////////////////////////////////////////


using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using WSUI.Core.Interfaces;

namespace WSUI.Core.Utils 
{
	public class QueryReader : IQueryReader 
    {

		protected QueryReader()
        {

		}

        private static Lazy<IQueryReader> _instance = new Lazy<IQueryReader>(() =>
        {
            var inst = new QueryReader();
            inst.Init();
            return inst;
        });


	    public static IQueryReader Instance
	    {
	        get { return _instance.Value; }
	    }

	    private void Init()
	    {
	        
	    }

		/// 
		/// <param name="reader"></param>
		/// <param name="type"></param>
		public object ReadResult(IDataReader reader, Type type, IList<Tuple<string,string,int,bool>> fields){

			return null;
		}



	}//end QueryReader

}//end namespace Utils